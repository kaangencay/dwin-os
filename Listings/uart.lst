C51 COMPILER V9.60.0.0   UART                                                              12/09/2022 13:51:59 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE driver\uart.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\driver;.\source) D
                    -EBUG OBJECTEXTEND PRINT(.\Listings\uart.lst) TABS(2) OBJECT(.\Objects\uart.obj)

line level    source

   1          /******************************************************************************
   2          
   3                            版权所有 (C), 2019, 北京迪文科技有限公司
   4          
   5           ******************************************************************************
   6            文 件 名   : uart.c
   7            版 本 号   : 
   8            作    者   : 
   9            生成日期   : 2019年9月2日
  10            功能描述   : 串口函数
  11            修改历史   :
  12            1.日    期   : 
  13              作    者   : 
  14              修改内容   : 
  15          ******************************************************************************/
  16          
  17          #include "sys.h"
  18          #include "uart.h"
  19          DATABUFF Uart_Struct[UARTBUFNUM];
  20          
  21          
  22          //增
  23          volatile u16  RxWritePt = 0;        //接收写指针
  24          volatile u16  RxReadPt = 0;         //接收读指针
  25          volatile u8   RxBuf[RxBufLen];  //接收缓冲区  (2K字节)
  26          
  27          /*****************************************************************************
  28           函 数 名  : void UART2_Init(u32 bdt)
  29           功能描述  : 串口2初始化
  30           输入参数  :  bdt 波特率
  31           输出参数  : 
  32           修改历史  :
  33            1.日    期   : 2019年10月12日
  34              作    者   :chenmeishu
  35              修改内容   : 创建
  36          *****************************************************************************/
  37          // #define UART2485
  38          #ifdef UART2485
                sbit TR2 = P0^0;
              #endif
  41          
  42          void UART2_Init(u32 bdt)     //8N1 115200
  43          {
  44   1        u16 tmp;  
  45   1        tmp=1024-FOSC/64/bdt;   
  46   1        MUX_SEL|=0X40;
  47   1        SetPinOut(0,4);
  48   1        SetPinIn(0,5);
  49   1        P0 |= 0x30;
  50   1        ADCON=0x80;
  51   1        SCON0=0x50;
  52   1        SREL0H = (u8)(tmp>>8);
  53   1        SREL0L = (u8)tmp;
  54   1        IEN0|=0x10;
C51 COMPILER V9.60.0.0   UART                                                              12/09/2022 13:51:59 PAGE 2   

  55   1        ES0=1;
  56   1      #ifdef UART2485
                SetPinOut(0,0);
                TR2 = 0;
              #endif
  60   1      //  Uart_Struct[UART2].tx_head = 0;
  61   1      //  Uart_Struct[UART2].tx_tail = 0;
  62   1      //  Uart_Struct[UART2].tx_flag = 0;
  63   1      //  Uart_Struct[UART2].rx_head = 0;
  64   1      //  Uart_Struct[UART2].rx_tail = 0;
  65   1      //  EA=1;
  66   1      }
  67          /*****************************************************************************
  68           函 数 名  : void UART3_Init(void)
  69           功能描述  : 串口3初始化
  70           输入参数  :  
  71           输出参数  : 
  72           修改历史  :
  73            1.日    期   : 2019年10月12日
  74              作    者   :chenmeishu
  75              修改内容   : 创建
  76          *****************************************************************************/
  77          // #define UART3485
  78          #ifdef UART3485
                sbit TR3 = P0^0;
              #endif
  81          void UART3_Init(u32 bdt)    //8N1 115200
  82          {
  83   1        u16 tmp;  
  84   1        tmp=1024-FOSC/32/bdt;
  85   1        
  86   1        MUX_SEL|=0X20;
  87   1        
  88   1        SetPinOut(0,6);
  89   1        SetPinIn(0,7);
  90   1        P0 |= 0xC0;
  91   1        
  92   1        SCON1 = 0X90;
  93   1        SREL1H =(u8)(tmp>>8);
  94   1        SREL1L =(u8)tmp;
  95   1        IEN2 |= 1;
  96   1      #ifdef UART3485
                SetPinOut(0,0);
                TR3 = 0;
              #endif
 100   1      //  Uart_Struct[UART3].tx_head = 0;
 101   1      //  Uart_Struct[UART3].tx_tail = 0;
 102   1      //  Uart_Struct[UART3].tx_flag = 0;
 103   1      //  Uart_Struct[UART3].rx_head = 0;
 104   1      //  Uart_Struct[UART3].rx_tail = 0;
 105   1      }
 106          /*****************************************************************************
 107           函 数 名  : void UART4_Init(void)
 108           功能描述  : 串口4初始化
 109           输入参数  :  
 110           输出参数  : 
 111           修改历史  :
 112            1.日    期   : 2019年10月12日
 113              作    者   :chenmeishu
 114              修改内容   : 创建
 115          *****************************************************************************/
 116          // #define UART4485
C51 COMPILER V9.60.0.0   UART                                                              12/09/2022 13:51:59 PAGE 3   

 117          #ifdef UART4485
                sbit TR4 = P0^0;
              #endif
 120          void UART4_Init(u32 bdt)     //8N1 115200
 121          {
 122   1        u16 tmp;
 123   1        SCON2T = 0X80;
 124   1        SCON2R = 0X80;
 125   1        tmp=FOSC/8/bdt;
 126   1        BODE2_DIV_H = (u8)(tmp>>8);
 127   1        BODE2_DIV_L = (u8)tmp;
 128   1        
 129   1        IEN1 |= 0X0C;
 130   1      #ifdef UART4485
                SetPinOut(0,0);
                TR4 = 0;
              #endif
 134   1      //  Uart_Struct[UART4].tx_head = 0;
 135   1      //  Uart_Struct[UART4].tx_tail = 0;
 136   1      //  Uart_Struct[UART4].tx_flag = 0;
 137   1      //  Uart_Struct[UART4].rx_head = 0;
 138   1      //  Uart_Struct[UART4].rx_tail = 0;
 139   1      }
 140          /*****************************************************************************
 141           函 数 名  : void UART5_Init(void)
 142           功能描述  : 串口5初始化
 143           输入参数  :  
 144           输出参数  : 
 145           修改历史  :
 146            1.日    期   : 2019年10月12日
 147              作    者   :chenmeishu
 148              修改内容   : 创建
 149          *****************************************************************************/
 150          // #define UART5485
 151          #ifdef UART5485
                sbit TR5 = P0^0;
              #endif
 154          void UART5_Init(u32 bdt)
 155          {
 156   1        u16 tmp;
 157   1        SCON3T = 0X80;
 158   1        SCON3R = 0X80;
 159   1          
 160   1        tmp=FOSC/8/bdt;
 161   1        BODE3_DIV_H = (u8)(tmp>>8);
 162   1        BODE3_DIV_L = (u8)tmp;;
 163   1        IEN1 |= 0X30;
 164   1      #ifdef UART5485
                SetPinOut(0,0);
                TR5 = 0;
              #endif
 168   1      //  Uart_Struct[UART5].tx_head = 0;
 169   1      //  Uart_Struct[UART5].tx_tail = 0;
 170   1      //  Uart_Struct[UART5].tx_flag = 0;
 171   1      //  Uart_Struct[UART5].rx_head = 0;
 172   1      //  Uart_Struct[UART5].rx_tail = 0;
 173   1      }
 174          
 175          void UartInit(u8 UartPort, u32 bdt)
 176          {
 177   1        switch(UartPort)
 178   1        {
C51 COMPILER V9.60.0.0   UART                                                              12/09/2022 13:51:59 PAGE 4   

 179   2          case UART2:UART2_Init(bdt);break;
 180   2          case UART3:UART3_Init(bdt);break;
 181   2          case UART4:UART4_Init(bdt);break;
 182   2          case UART5:UART5_Init(bdt);break;
 183   2          default:break;
 184   2        }
 185   1      }
 186          
 187          /*****************************************************************************
 188           函 数 名  : void Uatr_Send_Data(u8 str,u8 len,const u8 *buf)
 189           功能描述  : 串口2-5发送数据
 190           输入参数  : 串口选择0-3对应串口2-5，发送长度len，发送数据缓存区*buf
 191           输出参数  : 
 192           修改历史  :
 193            1.日    期   : 2020年5月1日
 194              作    者   :chenmeishu
 195              修改内容   : 创建
 196          *****************************************************************************/
 197          void Uatr_Send_Data(u8 str,u16 len,const u8 *buf)
 198          {
 199   1        u16 i;
 200   1        
 201   1        EA = 0;
 202   1        for(i=0;i<len;i++)
 203   1        {
 204   2          Uart_Struct[str].tx_buf[Uart_Struct[str].tx_head] = *buf++;
 205   2          Uart_Struct[str].tx_head++;
 206   2          Uart_Struct[str].tx_head &= SERIAL_COUNT;
 207   2        }
 208   1        switch(str)
 209   1        {
 210   2          case UART2:
 211   2            if(Uart_Struct[UART2].tx_flag == 0)
 212   2            {
 213   3            #ifdef UART2485
                      TR2 = 1;
                    #endif
 216   3              Uart_Struct[UART2].tx_flag = 1;
 217   3              SBUF0 = Uart_Struct[UART2].tx_buf[Uart_Struct[UART2].tx_tail];
 218   3              Uart_Struct[UART2].tx_tail++;
 219   3              Uart_Struct[UART2].tx_tail &= SERIAL_COUNT;
 220   3            }
 221   2            break;
 222   2          case UART3:
 223   2            if(Uart_Struct[UART3].tx_flag == 0)
 224   2            {
 225   3            #ifdef UART3485
                      TR3 = 1;
                    #endif
 228   3              Uart_Struct[UART3].tx_flag = 1;
 229   3              SBUF1 = Uart_Struct[UART3].tx_buf[Uart_Struct[UART3].tx_tail];
 230   3              Uart_Struct[UART3].tx_tail++;
 231   3              Uart_Struct[UART3].tx_tail &= SERIAL_COUNT;
 232   3            }
 233   2            break;
 234   2          case UART4:
 235   2            if(Uart_Struct[UART4].tx_flag == 0)
 236   2            {
 237   3            #ifdef UART4485
                      TR4 = 1;
                    #endif
 240   3              Uart_Struct[UART4].tx_flag = 1;
C51 COMPILER V9.60.0.0   UART                                                              12/09/2022 13:51:59 PAGE 5   

 241   3              SBUF2_TX = Uart_Struct[UART4].tx_buf[Uart_Struct[UART4].tx_tail];
 242   3              Uart_Struct[UART4].tx_tail++;
 243   3              Uart_Struct[UART4].tx_tail &= SERIAL_COUNT;
 244   3            }
 245   2            break;
 246   2          case UART5:
 247   2            if(Uart_Struct[UART5].tx_flag == 0)
 248   2            {
 249   3            #ifdef UART5485
                      TR5 = 1;
                    #endif
 252   3              Uart_Struct[UART5].tx_flag = 1;
 253   3              SBUF3_TX = Uart_Struct[UART5].tx_buf[Uart_Struct[UART5].tx_tail];
 254   3              Uart_Struct[UART5].tx_tail++;
 255   3              Uart_Struct[UART5].tx_tail &= SERIAL_COUNT;
 256   3            }
 257   2            break;
 258   2          default:
 259   2            break;
 260   2        }
 261   1        EA = 1;
 262   1      }
 263          
 264          void uart2_Isr() interrupt 4
 265          {
 266   1        EA = 0;
 267   1        if(RI0)
 268   1        {
 269   2          RI0 = 0;
 270   2          Uart_Struct[UART2].rx_buf[Uart_Struct[UART2].rx_head] = SBUF0;
 271   2          Uart_Struct[UART2].rx_head++;
 272   2          Uart_Struct[UART2].rx_head &= SERIAL_COUNT;
 273   2        }
 274   1        if(TI0)
 275   1        {
 276   2          TI0 = 0;
 277   2          if(Uart_Struct[UART2].tx_head != Uart_Struct[UART2].tx_tail)
 278   2          {
 279   3            SBUF0 = Uart_Struct[UART2].tx_buf[Uart_Struct[UART2].tx_tail];  
 280   3            Uart_Struct[UART2].tx_tail++;
 281   3            Uart_Struct[UART2].tx_tail &= SERIAL_COUNT;
 282   3          }
 283   2          else
 284   2          {
 285   3            Uart_Struct[UART2].tx_flag = 0;
 286   3          #ifdef UART2485
                    TR2 = 0;
                  #endif
 289   3          }
 290   2        }
 291   1        EA = 1;
 292   1      }
 293          
 294          void uart4t_Isr() interrupt 10
 295          {
 296   1        EA = 0;
 297   1        SCON2T &= 0XFE;
 298   1        if(Uart_Struct[UART4].tx_head != Uart_Struct[UART4].tx_tail)
 299   1        {
 300   2          SBUF2_TX = Uart_Struct[UART4].tx_buf[Uart_Struct[UART4].tx_tail]; 
 301   2          Uart_Struct[UART4].tx_tail++;
 302   2          Uart_Struct[UART4].tx_tail &= SERIAL_COUNT;
C51 COMPILER V9.60.0.0   UART                                                              12/09/2022 13:51:59 PAGE 6   

 303   2        }
 304   1        else
 305   1        {
 306   2          Uart_Struct[UART4].tx_flag = 0;
 307   2        #ifdef UART4485
                  TR4 = 0;
                #endif
 310   2        }
 311   1        EA = 1;
 312   1      }
 313          
 314          void uart4r_Isr() interrupt 11
 315          {
 316   1      //  EA = 0;
 317   1      //  SCON2R &= 0XFE;
 318   1      //  Uart_Struct[UART4].rx_buf[Uart_Struct[UART4].rx_head] = SBUF2_RX;
 319   1      //  Uart_Struct[UART4].rx_head++;
 320   1      //  Uart_Struct[UART4].rx_head &= SERIAL_COUNT;
 321   1      //  EA = 1;
 322   1        
 323   1          u8 res=0;
 324   1          EA=0;
 325   1          if((SCON2R&0x01)==1)
 326   1          {
 327   2              res=SBUF2_RX;
 328   2              RxBuf[RxWritePt&RxBufMask]= res;
 329   2              RxWritePt++;     
 330   2          }
 331   1          SCON2R &= 0xFE;  
 332   1          EA=1;
 333   1      }
 334          
 335          
 336          void UART4_Sendbyte(u8 dat)
 337          {
 338   1        SBUF2_TX = dat; 
 339   1        while((SCON2T&0x01)==0);  
 340   1        SCON2T &= 0xFE;               
 341   1      }
 342          
 343          void UART4_Sendbyte16(u16 dat)
 344          {
 345   1        u8 data_L,data_H;
 346   1        data_L = dat & 0xFF ;
 347   1        data_H = (dat >> 8) & 0xFF ;
 348   1        UART4_Sendbyte(data_H);
 349   1        UART4_Sendbyte(data_L);
 350   1                  
 351   1      }
 352          
 353          void UART4_Sendbyte32(u32 dat)     
 354          {
 355   1        u8 data_8,data_16,data_24,data_32;
 356   1        data_8 = dat & 0xFF ;
 357   1        data_16 = (dat >> 8) & 0xFF ;
 358   1        data_24 = (dat >> 16) & 0xFF ;
 359   1        data_32 = (dat >> 24) & 0xFF ;
 360   1        UART4_Sendbyte(data_32);
 361   1        UART4_Sendbyte(data_24);
 362   1        UART4_Sendbyte(data_16);
 363   1        UART4_Sendbyte(data_8); 
 364   1      }
C51 COMPILER V9.60.0.0   UART                                                              12/09/2022 13:51:59 PAGE 7   

 365          
 366          
 367          
 368          void uart5t_Isr() interrupt 12
 369          {
 370   1        EA = 0;
 371   1        SCON3T &= 0XFE;
 372   1        if(Uart_Struct[UART5].tx_head != Uart_Struct[UART5].tx_tail)
 373   1        {
 374   2          SBUF3_TX = Uart_Struct[UART5].tx_buf[Uart_Struct[UART5].tx_tail]; 
 375   2          Uart_Struct[UART5].tx_tail++;
 376   2          Uart_Struct[UART5].tx_tail &= SERIAL_COUNT;
 377   2        }
 378   1        else
 379   1        {
 380   2          Uart_Struct[UART5].tx_flag = 0;
 381   2        #ifdef UART5485
                  TR5 = 0;
                #endif
 384   2        }
 385   1        EA = 1;
 386   1      }
 387          
 388          void uart5r_Isr() interrupt 13
 389          {
 390   1        EA = 0;
 391   1        SCON3R &= 0XFE;
 392   1        Uart_Struct[UART5].rx_buf[Uart_Struct[UART5].rx_head] = SBUF3_RX;
 393   1        Uart_Struct[UART5].rx_head++;
 394   1        Uart_Struct[UART5].rx_head &= SERIAL_COUNT; 
 395   1        EA = 1;
 396   1      }
 397          
 398          void uart3_Isr() interrupt 16
 399          {
 400   1        EA = 0;
 401   1        if((SCON1 & 0X01))
 402   1        {
 403   2          SCON1 = 0X90;
 404   2          SCON1 &= 0XFE;
 405   2          Uart_Struct[UART3].rx_buf[Uart_Struct[UART3].rx_head] = SBUF1;
 406   2          Uart_Struct[UART3].rx_head++;
 407   2          Uart_Struct[UART3].rx_head &= SERIAL_COUNT; 
 408   2        }
 409   1        if((SCON1 & 0X02))
 410   1        {
 411   2          SCON1 = 0X90;
 412   2          SCON1 &= 0XFD;
 413   2          if(Uart_Struct[UART3].tx_head != Uart_Struct[UART3].tx_tail)
 414   2          {
 415   3            SBUF1 = Uart_Struct[UART3].tx_buf[Uart_Struct[UART3].tx_tail];  
 416   3            Uart_Struct[UART3].tx_tail++;
 417   3            Uart_Struct[UART3].tx_tail &= SERIAL_COUNT;
 418   3          }
 419   2          else
 420   2          {
 421   3            Uart_Struct[UART3].tx_flag = 0;
 422   3          #ifdef UART3485
                    TR3 = 0;
                  #endif
 425   3          }
 426   2        }
C51 COMPILER V9.60.0.0   UART                                                              12/09/2022 13:51:59 PAGE 8   

 427   1        EA = 1;
 428   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1507    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   8744      21
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
