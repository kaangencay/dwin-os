C51 COMPILER V9.60.0.0   RECEIVEDATA                                                       12/22/2022 15:38:00 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE RECEIVEDATA
OBJECT MODULE PLACED IN .\Objects\ReceiveData.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE driver\ReceiveData.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\driver;.\so
                    -urce) DEBUG OBJECTEXTEND PRINT(.\Listings\ReceiveData.lst) TABS(2) OBJECT(.\Objects\ReceiveData.obj)

line level    source

   1          #include "ReceiveData.h"
   2          #include "timer.h"
   3          #include "ui.h"
   4          #include "uart.h"
   5          #include "MYModBus.h"
   6          #include "vars.h"
   7          
   8          void Receive_Modbus(void)
   9          {
  10   1        u16 iRxReadPt;
  11   1        u16 RxHead_PC;
  12   1        u16 Check_Nodbus;
  13   1        u16 CheckNumber;
  14   1      
  15   1        u8 i;
  16   1        u8 Length;
  17   1        u8 buf[12];
  18   1        u16 RxCommon;
  19   1      
  20   1        u16 Dat1;
  21   1        u16 Dat2; 
  22   1        u16 Dat3;
  23   1        u16 Dat4;
  24   1        u16 Dat5;
  25   1        u16 Dat6;
  26   1      
  27   1        u16 Addr;
  28   1      
  29   1        while ((u16)(RxWritePt - RxReadPt) >= 6)
  30   1        {
  31   2          iRxReadPt = RxReadPt;
  32   2      
  33   2          RxHead_PC = RxBuf[(iRxReadPt++) & RxBufMask]; // ï¿½ï¿½âµ½Ö¡Í·
  34   2      
  35   2          if (RxHead_PC == 0x01)
  36   2          {
  37   3      
  38   3            if ((RxBuf[(iRxReadPt)&RxBufMask] == 0x03) || (RxBuf[(iRxReadPt)&RxBufMask] == 0x05) || (RxBuf[(iRxRead
             -Pt)&RxBufMask] == 0x10)) // ï¿½ï¿½âµ½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
  39   3            {
  40   4              RxCommon = RxBuf[(iRxReadPt++) & RxBufMask];
  41   4            }
  42   3            else
  43   3            {
  44   4      
  45   4              RxReadPt++;
  46   4              continue;
  47   4            }
  48   3          }
  49   2          else
  50   2          {
  51   3      
  52   3            RxReadPt++;
  53   3            continue;
C51 COMPILER V9.60.0.0   RECEIVEDATA                                                       12/22/2022 15:38:00 PAGE 2   

  54   3          }
  55   2      
  56   2          RxReadPt = iRxReadPt;
  57   2          delay_ms(5);
  58   2      
  59   2          switch (RxCommon)
  60   2          {
  61   3          case 0x03:
  62   3          {
  63   4            Length = RxBuf[(iRxReadPt++) & RxBufMask];
  64   4            if (Length == 8)
  65   4            {
  66   5              delay_ms(3);
  67   5            }
  68   4            switch (Length)
  69   4            {
  70   5            case 0x02:
  71   5            {
  72   6              if ((u16)(RxWritePt - RxReadPt) < 4) //
  73   6              {
  74   7                UART4_Sendbyte16(0xDD03);
  75   7                RxReadPt -= 2;
  76   7                break;
  77   7              }
  78   6              buf[0] = 0x01;
  79   6              buf[1] = RxCommon;
  80   6              buf[2] = Length;               // ï¿½ï¿½ï¿½ï¿½ï¿½Ö½ï¿½ï¿½ï¿½
  81   6              buf[3] = RxBuf[(iRxReadPt++) & RxBufMask]; // ï¿½ï¿½ï¿½ï¿½1
  82   6              buf[4] = RxBuf[(iRxReadPt++) & RxBufMask]; // ï¿½ï¿½ï¿½ï¿½2
  83   6      
  84   6              Check_Nodbus = (RxBuf[(iRxReadPt++) & RxBufMask] << 8) + RxBuf[(iRxReadPt++) & RxBufMask]; // ï¿½ï¿½ï¿
             -½ï¿½Ð£ï¿½ï¿½Î»
  85   6              CheckNumber = crc16(buf, RxWritePt - RxReadPt);
  86   6      
  87   6              if (Check_Nodbus == CheckNumber)
  88   6              {
  89   7      
  90   7                // ï¿½ï¿½ï¿½ï¿½
  91   7                if (HOST_Addr == HOST_Shake_hands)
  92   7                {
  93   8      
  94   8                  gCtrlPara.Shake_handFlag = 1;
  95   8                  Send_ModBus_10(0x10, HOST_Power_On_Reset, 0x1, 0x0001, 0x02); // ï¿½Â·ï¿½ï¿½ï¿½Î»
  96   8      
  97   8                  gCtrlPara.Cartoon = 1;                 // ï¿½ï¿½ï¿½ï¿½
  98   8                  sys_write_vp(0x100E, (u8 *)&gCtrlPara.Cartoon, 1); // ï¿½ï¿½ï¿½ï¿½Í£Ö¹
  99   8                  delay_ms(1000);
 100   8                  break;
 101   8                }
 102   7                if (HOST_Addr == HOST_Power_On_Reset)
 103   7                {
 104   8                  if (buf[4] == 1)
 105   8                  {
 106   9                    gCtrlPara.PowerOn_ResetFlag = 1; // ï¿½ï¿½Î»ï¿½ï¿½Ö¾
 107   9      
 108   9                    gCtrlPara.SendFlag = 1; // ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ý±ï¿½Ö¾
 109   9      
 110   9                    gCtrlPara.Cartoon = 1;                 // ï¿½ï¿½ï¿½ï¿½
 111   9                    sys_write_vp(0x100A, (u8 *)&gCtrlPara.Cartoon, 1); // ï¿½ï¿½ï¿½ï¿½Í£Ö¹
 112   9                    sys_write_vp(0x100C, (u8 *)&gCtrlPara.Cartoon, 1); // ï¿½ï¿½ï¿½ï¿½Í£Ö¹
 113   9      
 114   9                    // ï¿½ï¿½×ªï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
C51 COMPILER V9.60.0.0   RECEIVEDATA                                                       12/22/2022 15:38:00 PAGE 3   

 115   9                    Page_Change(0x01);
 116   9                  }
 117   8                  break;
 118   8                }
 119   7                // ï¿½ï¿½ï¿½ï¿½×´Ì¬ï¿½ï¿½ï¿½ï¿½04ï¿½ï¿½ï¿½ï¿½
 120   7                if (HOST_Addr == HMI_WorkSta)
 121   7                {
 122   8                  gCtrlPara.WorkSta = buf[4];
 123   8      
 124   8                  // ï¿½ï¿½ï¿½ï¿½×´Ì¬ï¿½ï¿½Ê¾ï¿½ï¿½100msï¿½ï¿½ï¿½ï¿½Ò»ï¿½Î£ï¿½
 125   8                  //                                                    if(gCtrlPara.WorkSta != gCtrlPara.WorkStaHis)
 126   8                  //                                                    {
 127   8                  //                                                      gCtrlPara.WorkStaHis =gCtrlPara.WorkSta;
 128   8      
 129   8                  if (gCtrlPara.WorkSta == 0x0000) // IDLE
 130   8                  {
 131   9                    gCtrlPara.Text1 = 0x4944;
 132   9                    gCtrlPara.Text2 = 0x4C45;
 133   9                    sys_write_vp(HMI_WorkSta, (u8 *)&gCtrlPara.Text1, 1);   // ï¿½ï¿½Ê¾ï¿½ï¿½ï¿½ï¿½×´Ì¬
 134   9                    sys_write_vp(HMI_WorkSta + 1, (u8 *)&gCtrlPara.Text2, 1); // ï¿½ï¿½Ê¾ï¿½ï¿½ï¿½ï¿½×´Ì¬
 135   9                    gCtrlPara.Start_Stop = 0;
 136   9                    sys_write_vp(HMI_Start_Stop, (u8 *)&gCtrlPara.Start_Stop, 1); // Í¼ï¿½ï¿½ï¿½ï¿½Ê¾
 137   9                  }
 138   8                  else if (gCtrlPara.WorkSta == 0x0001) // RUN
 139   8                  {
 140   9      
 141   9                    gCtrlPara.Text1 = 0x4255;
 142   9                    gCtrlPara.Text2 = 0x5359;
 143   9                    sys_write_vp(HMI_WorkSta, (u8 *)&gCtrlPara.Text1, 1);   // ï¿½ï¿½Ê¾ï¿½ï¿½ï¿½ï¿½×´Ì¬
 144   9                    sys_write_vp(HMI_WorkSta + 1, (u8 *)&gCtrlPara.Text2, 1); // ï¿½ï¿½Ê¾ï¿½ï¿½ï¿½ï¿½×´Ì¬ 
 145   9                    gCtrlPara.Start_Stop = 1;
 146   9                    sys_write_vp(HMI_Start_Stop, (u8 *)&gCtrlPara.Start_Stop, 1); // Í¼ï¿½ï¿½ï¿½ï¿½Ê¾
 147   9                  }
 148   8                  else if (gCtrlPara.WorkSta == 0x0003) // PAUSE
 149   8                  {
 150   9      
 151   9                    gCtrlPara.Text1 = 0x5041;
 152   9                    gCtrlPara.Text2 = 0x5553;
 153   9                    gCtrlPara.Text3 = 0x4500;
 154   9                    sys_write_vp(HMI_WorkSta, (u8 *)&gCtrlPara.Text1, 1);   // ï¿½ï¿½Ê¾ï¿½ï¿½ï¿½ï¿½×´Ì¬
 155   9                    sys_write_vp(HMI_WorkSta + 1, (u8 *)&gCtrlPara.Text2, 1); // ï¿½ï¿½Ê¾ï¿½ï¿½ï¿½ï¿½×´Ì¬
 156   9                    sys_write_vp(HMI_WorkSta + 2, (u8 *)&gCtrlPara.Text3, 1); // ï¿½ï¿½Ê¾ï¿½ï¿½ï¿½ï¿½×´Ì¬       
 157   9                    gCtrlPara.Start_Stop = 0;
 158   9                    sys_write_vp(HMI_Start_Stop, (u8 *)&gCtrlPara.Start_Stop, 1); // Í¼ï¿½ï¿½ï¿½ï¿½Ê¾
 159   9                  }
 160   8                  else if (gCtrlPara.WorkSta == 0x0005) // STOP
 161   8                  {
 162   9                    gCtrlPara.Text1 = 0x4944;
 163   9                    gCtrlPara.Text2 = 0x4C45;
 164   9                    sys_write_vp(HMI_WorkSta, (u8 *)&gCtrlPara.Text1, 1);   // ï¿½ï¿½Ê¾ï¿½ï¿½ï¿½ï¿½×´Ì¬
 165   9                    sys_write_vp(HMI_WorkSta + 1, (u8 *)&gCtrlPara.Text2, 1); // ï¿½ï¿½Ê¾ï¿½ï¿½ï¿½ï¿½×´Ì¬
 166   9      
 167   9                    if (gCtrlPara.Start_Stop)
 168   9                    {
 169  10                      gCtrlPara.WorkTimeH = 0;
 170  10                      sys_write_vp(HMI_Work_TimeC, (u8 *)&gCtrlPara.WorkTimeH, 1);
 171  10                      gCtrlPara.WorkTimeM = 0;
 172  10                      sys_write_vp(HMI_Work_TimeD, (u8 *)&gCtrlPara.WorkTimeM, 1);
 173  10                      gCtrlPara.WorkTimeS = 0;
 174  10                      sys_write_vp(HMI_Work_TimeE, (u8 *)&gCtrlPara.WorkTimeS, 1);
 175  10                      gCtrlPara.Processing_Speed = 0;
 176  10                      sys_write_vp(HMI_Processing_Speed, (u8 *)&gCtrlPara.Processing_Speed, 1);
C51 COMPILER V9.60.0.0   RECEIVEDATA                                                       12/22/2022 15:38:00 PAGE 4   

 177  10      
 178  10                      Page_Change(0x01);
 179  10      
 180  10                      gCtrlPara.GO_Focusing = 0;
 181  10                    }
 182   9                    
 183   9                    gCtrlPara.Start_Stop = 0;
 184   9                    sys_write_vp(HMI_Start_Stop, (u8 *)&gCtrlPara.Start_Stop, 1); // Í¼ï¿½ï¿½ï¿½ï¿½Ê¾
 185   9                  }
 186   8                  //                                                      gCtrlPara.WorkSta =gCtrlPara.WorkStaHis;
 187   8                  //                                                    }
 188   8                  gTime4 = 0;
 189   8                  gCtrlPara.Flag = 1;
 190   8                  gCtrlPara.FreeFlag = 1; // ï¿½ï¿½ï¿½ï¿½
 191   8                  break;
 192   8                }
 193   7      
 194   7                ////ï¿½ï¿½Î»ï¿½È±ï¿½ï¿½ï¿½ï¿½ï¿½Ï¢
 195   7                if (HOST_Addr == HOST_Limit_Infor)
 196   7                {
 197   8                  Dat1 = (buf[3] << 8) + buf[4];
 198   8                  gCtrlPara.Alarm_Value = Dat1; // ï¿½ï¿½ï¿½ï¿½Öµ
 199   8      
 200   8                  if (Dat1 == 0x0000)
 201   8                  {
 202   9                    gCtrlPara.Text1 = 0x0000;
 203   9                    gCtrlPara.Text2 = 0x0000;
 204   9                    gCtrlPara.Text3 = 0x0000;
 205   9                    gCtrlPara.Text4 = 0x0000;
 206   9                    gCtrlPara.Text5 = 0x0000;
 207   9                    gCtrlPara.Text6 = 0x0000;
 208   9                    gCtrlPara.Text7 = 0x0000;
 209   9      
 210   9                    sys_write_vp(HMI_Warning_Text, (u8 *)&gCtrlPara.Text1, 1);
 211   9                    sys_write_vp(HMI_Warning_Text + 1, (u8 *)&gCtrlPara.Text2, 1);
 212   9                    sys_write_vp(HMI_Warning_Text + 2, (u8 *)&gCtrlPara.Text3, 1);
 213   9                    sys_write_vp(HMI_Warning_Text + 3, (u8 *)&gCtrlPara.Text4, 1);
 214   9                    sys_write_vp(HMI_Warning_Text + 4, (u8 *)&gCtrlPara.Text5, 1);
 215   9                    sys_write_vp(HMI_Warning_Text + 5, (u8 *)&gCtrlPara.Text6, 1);
 216   9                    sys_write_vp(HMI_Warning_Text + 6, (u8 *)&gCtrlPara.Text7, 1);
 217   9                  }
 218   8                  else
 219   8                  {
 220   9                    ALm_Init(gCtrlPara.Alarm_Value);
 221   9                  }
 222   8      
 223   8                  gTime4 = 0;
 224   8                  gCtrlPara.Flag = 5;
 225   8                  gCtrlPara.FreeFlag = 9; // ï¿½ï¿½ï¿½ï¿½
 226   8                  break;
 227   8                }
 228   7      
 229   7                // ï¿½ß±ß¿ï¿½
 230   7                if (HOST_Addr == HMI_Go_Border)
 231   7                {
 232   8                  Dat1 = (buf[3] << 8) + buf[4];
 233   8      
 234   8                  if (Dat1 == 1)
 235   8                  {
 236   9                  }
 237   8                  else if (Dat1 == 2)
 238   8                  {
C51 COMPILER V9.60.0.0   RECEIVEDATA                                                       12/22/2022 15:38:00 PAGE 5   

 239   9      
 240   9                    gCtrlPara.SendFlag = 2;
 241   9                    gCtrlPara.GO_Focusing = 0; // ï¿½ß±ß¿ï¿½-Ñ°ï¿½ï¿½
 242   9                  }
 243   8                  gCtrlPara.FreeFlag = 7;
 244   8                  break;
 245   8                }
 246   7                // ï¿½Ó¹ï¿½Ê±ï¿½ä£¨Ê±ï¿½ï¿½
 247   7                if (HOST_Addr == HMI_Work_TimeC)
 248   7                {
 249   8                  Dat1 = (buf[3] << 8) + buf[4];
 250   8                  gCtrlPara.WorkTimeH = Dat1;
 251   8                  sys_write_vp(HMI_Work_TimeC, (u8 *)&Dat1, 1);
 252   8      
 253   8                  gTime4 = 0;
 254   8                  gCtrlPara.Flag = 6;
 255   8                  break;
 256   8                }
 257   7      
 258   7                // ï¿½Ó¹ï¿½Ê±ï¿½ä£¨ï¿½Ö£ï¿½
 259   7                if (HOST_Addr == HMI_Work_TimeD)
 260   7                {
 261   8                  Dat1 = (buf[3] << 8) + buf[4];
 262   8                  gCtrlPara.WorkTimeM = Dat1;
 263   8                  sys_write_vp(HMI_Work_TimeD, (u8 *)&Dat1, 1);
 264   8      
 265   8                  gTime4 = 0;
 266   8                  gCtrlPara.Flag = 7;
 267   8                  break;
 268   8                }
 269   7      
 270   7                // ï¿½Ó¹ï¿½Ê±ï¿½ä£¨ï¿½ë£©
 271   7                if (HOST_Addr == HMI_Work_TimeE)
 272   7                {
 273   8                  Dat1 = (buf[3] << 8) + buf[4];
 274   8                  gCtrlPara.WorkTimeS = Dat1;
 275   8                  sys_write_vp(HMI_Work_TimeE, (u8 *)&Dat1, 1);
 276   8      
 277   8                  gTime4 = 0;
 278   8                  gCtrlPara.Flag = 8;
 279   8                  break;
 280   8                }
 281   7      
 282   7                // ï¿½Ó¹ï¿½ï¿½Ù¶ï¿½0-1000
 283   7                if (HOST_Addr == HMI_Processing_Speed)
 284   7                {
 285   8                  Dat1 = (buf[3] << 8) + buf[4];
 286   8      
 287   8                  if (gCtrlPara.WorkSta == 0x0001)
 288   8                  {
 289   9                    if (Dat1 < 100)
 290   9                    {
 291  10                      gCtrlPara.Processing_Speed = 0;
 292  10                    }
 293   9                    else if ((Dat1 >= 100) && (Dat1 < 200))
 294   9                    {
 295  10                      gCtrlPara.Processing_Speed = 1;
 296  10                    }
 297   9                    else if ((Dat1 >= 200) && (Dat1 < 300))
 298   9                    {
 299  10                      gCtrlPara.Processing_Speed = 2;
 300  10                    }
C51 COMPILER V9.60.0.0   RECEIVEDATA                                                       12/22/2022 15:38:00 PAGE 6   

 301   9                    else if ((Dat1 >= 300) && (Dat1 < 400))
 302   9                    {
 303  10                      gCtrlPara.Processing_Speed = 3;
 304  10                    }
 305   9                    else if ((Dat1 >= 400) && (Dat1 < 500))
 306   9                    {
 307  10                      gCtrlPara.Processing_Speed = 4;
 308  10                    }
 309   9                    else if ((Dat1 >= 500) && (Dat1 < 600))
 310   9                    {
 311  10                      gCtrlPara.Processing_Speed = 5;
 312  10                    }
 313   9                    else if ((Dat1 >= 600) && (Dat1 < 700))
 314   9                    {
 315  10                      gCtrlPara.Processing_Speed = 6;
 316  10                    }
 317   9                    else if ((Dat1 >= 700) && (Dat1 < 800))
 318   9                    {
 319  10                      gCtrlPara.Processing_Speed = 7;
 320  10                    }
 321   9                    else if ((Dat1 >= 800) && (Dat1 < 900))
 322   9                    {
 323  10                      gCtrlPara.Processing_Speed = 8;
 324  10                    }
 325   9                    else if ((Dat1 >= 900) && (Dat1 < 960))
 326   9                    {
 327  10                      gCtrlPara.Processing_Speed = 9;
 328  10                    }
 329   9                    else if (Dat1 >= 960)
 330   9                    {
 331  10                      gCtrlPara.Processing_Speed = 10;
 332  10                    }
 333   9      
 334   9                    sys_write_vp(HMI_Processing_Speed, (u8 *)&gCtrlPara.Processing_Speed, 1);
 335   9                  }
 336   8                  else if (gCtrlPara.WorkSta == 0x0000)
 337   8                  {
 338   9                    gCtrlPara.Processing_Speed = 0;
 339   9                    sys_write_vp(HMI_Processing_Speed, (u8 *)&gCtrlPara.Processing_Speed, 1); // ï¿½Ó¹ï¿½ï¿½Ù¶ï¿½ï¿½ï¿½
             -Ê¾
 340   9                  }
 341   8                  else if (gCtrlPara.WorkSta == 0x0005)
 342   8                  {
 343   9                    gCtrlPara.Processing_Speed = 10;
 344   9                    sys_write_vp(HMI_Processing_Speed, (u8 *)&gCtrlPara.Processing_Speed, 1); // ï¿½Ó¹ï¿½ï¿½Ù¶ï¿½ï¿½ï¿½
             -Ê¾
 345   9                  }
 346   8                  gTime4 = 0;
 347   8                  gCtrlPara.Flag = 9;
 348   8                  break;
 349   8                }
 350   7      
 351   7                // ï¿½Ä¼ï¿½ï¿½ï¿½ï¿½ï¿½
 352   7                if (HOST_Addr == HMI_Total_Files)
 353   7                {
 354   8                  Dat1 = (buf[3] << 8) + buf[4];
 355   8                  gCtrlPara.Total_Files = Dat1; // ï¿½Ä¼ï¿½ï¿½ï¿½ï¿½ï¿½
 356   8      
 357   8                  gCtrlPara.Remainder = gCtrlPara.Total_Files % 7; // ï¿½ï¿½ï¿½ï¿½
 358   8                  gCtrlPara.Integer = gCtrlPara.Total_Files / 7;   // ï¿½ï¿½ï¿½ï¿½
 359   8      
 360   8                  sys_write_vp(0x1031, (u8 *)&gCtrlPara.Total_Files, 1); // ï¿½Ä¼ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ê¾
C51 COMPILER V9.60.0.0   RECEIVEDATA                                                       12/22/2022 15:38:00 PAGE 7   

 361   8                  gCtrlPara.FileCount = 1;                 // ï¿½Ä¼ï¿½ï¿½ï¿½È¡ï¿½ï¿½ï¿½ï¿½Öµ
 362   8      
 363   8                  delay_ms(10);
 364   8      
 365   8                  break;
 366   8                }
 367   7      
 368   7                if (HOST_Addr == 0x0051)
 369   7                {
 370   8                  Dat1 = (buf[3] << 8) + buf[4];
 371   8      
 372   8                  sys_write_vp(0x10A1, (u8 *)&Dat1, 1);
 373   8      
 374   8                  gCtrlPara.IconCount = 1;
 375   8                }
 376   7                if (HOST_Addr == 0x0052)
 377   7                {
 378   8                  Dat1 = (buf[3] << 8) + buf[4];
 379   8      
 380   8                  sys_write_vp(0x10A2, (u8 *)&Dat1, 1);
 381   8      
 382   8                  gCtrlPara.IconCount = 2;
 383   8                }
 384   7                if (HOST_Addr == 0x0053)
 385   7                {
 386   8                  Dat1 = (buf[3] << 8) + buf[4];
 387   8      
 388   8                  sys_write_vp(0x10A3, (u8 *)&Dat1, 1);
 389   8      
 390   8                  gCtrlPara.IconCount = 3;
 391   8                }
 392   7                if (HOST_Addr == 0x0054)
 393   7                {
 394   8                  Dat1 = (buf[3] << 8) + buf[4];
 395   8      
 396   8                  sys_write_vp(0x10A4, (u8 *)&Dat1, 1);
 397   8      
 398   8                  gCtrlPara.IconCount = 4;
 399   8                }
 400   7                if (HOST_Addr == 0x0055)
 401   7                {
 402   8                  Dat1 = (buf[3] << 8) + buf[4];
 403   8      
 404   8                  sys_write_vp(0x10A5, (u8 *)&Dat1, 1);
 405   8      
 406   8                  gCtrlPara.IconCount = 5;
 407   8                }
 408   7                if (HOST_Addr == 0x0056)
 409   7                {
 410   8                  Dat1 = (buf[3] << 8) + buf[4];
 411   8      
 412   8                  sys_write_vp(0x10A6, (u8 *)&Dat1, 1);
 413   8      
 414   8                  gCtrlPara.IconCount = 6;
 415   8                }
 416   7              }
 417   6              for (i = 0; i < 12; i++)
 418   6              {
 419   7                buf[i] = 0;
 420   7              }
 421   6            }
 422   5            break;
C51 COMPILER V9.60.0.0   RECEIVEDATA                                                       12/22/2022 15:38:00 PAGE 8   

 423   5      
 424   5            case 0x04:
 425   5            {
 426   6              if ((u16)(RxWritePt - RxReadPt) < 6) //
 427   6              {
 428   7                UART4_Sendbyte16(0xDD04);
 429   7                RxReadPt -= 2;
 430   7                break;
 431   7              }
 432   6              buf[0] = 0x01;
 433   6              buf[1] = RxCommon;
 434   6              buf[2] = Length;               // ï¿½ï¿½ï¿½ï¿½ï¿½Ö½ï¿½ï¿½ï¿½
 435   6              buf[3] = RxBuf[(iRxReadPt++) & RxBufMask]; // ï¿½ï¿½ï¿½ï¿½1
 436   6              buf[4] = RxBuf[(iRxReadPt++) & RxBufMask]; // ï¿½ï¿½ï¿½ï¿½2
 437   6              buf[5] = RxBuf[(iRxReadPt++) & RxBufMask]; // ï¿½ï¿½ï¿½ï¿½3
 438   6              buf[6] = RxBuf[(iRxReadPt++) & RxBufMask]; // ï¿½ï¿½ï¿½ï¿½4
 439   6      
 440   6              Check_Nodbus = (RxBuf[(iRxReadPt++) & RxBufMask] << 8) + RxBuf[(iRxReadPt++) & RxBufMask]; // ï¿½ï¿½ï¿
             -½ï¿½Ð£ï¿½ï¿½Î»
 441   6              CheckNumber = crc16(buf, RxWritePt - RxReadPt);
 442   6      
 443   6              if (Check_Nodbus == CheckNumber)
 444   6              {
 445   7      
 446   7                // Xï¿½ï¿½ï¿½ï¿½
 447   7                if (HOST_Addr == HMI_Read_X_Value)
 448   7                {
 449   8                  Dat1 = (buf[3] << 8) + buf[4];
 450   8                  Dat2 = (buf[5] << 8) + buf[6];
 451   8      
 452   8                  sys_write_vp(HMI_Read_X_Value, (u8 *)&Dat1, 1);
 453   8                  sys_write_vp(HMI_Read_X_Value + 1, (u8 *)&Dat2, 1);
 454   8      
 455   8                  gTime4 = 0;
 456   8                  gCtrlPara.Flag = 2;
 457   8                  gCtrlPara.FreeFlag = 3; // ï¿½ï¿½ï¿½ï¿½
 458   8                  break;
 459   8                }
 460   7      
 461   7                // Yï¿½ï¿½ï¿½ï¿½
 462   7                if (HOST_Addr == HMI_Read_Y_Value)
 463   7                {
 464   8                  Dat1 = (buf[3] << 8) + buf[4];
 465   8                  Dat2 = (buf[5] << 8) + buf[6];
 466   8      
 467   8                  sys_write_vp(HMI_Read_Y_Value, (u8 *)&Dat1, 1);
 468   8                  sys_write_vp(HMI_Read_Y_Value + 1, (u8 *)&Dat2, 1);
 469   8      
 470   8                  gTime4 = 0;
 471   8                  gCtrlPara.Flag = 3;
 472   8                  gCtrlPara.FreeFlag = 4; // ï¿½ï¿½ï¿½ï¿½
 473   8                  break;
 474   8                }
 475   7      
 476   7                // Zï¿½ï¿½ï¿½ï¿½
 477   7                if (HOST_Addr == HMI_Read_Z_Value)
 478   7                {
 479   8                  Dat1 = (buf[3] << 8) + buf[4];
 480   8                  Dat2 = (buf[5] << 8) + buf[6];
 481   8      
 482   8                  sys_write_vp(HMI_Read_Z_Value, (u8 *)&Dat1, 1);
 483   8                  sys_write_vp(HMI_Read_Z_Value + 1, (u8 *)&Dat2, 1);
C51 COMPILER V9.60.0.0   RECEIVEDATA                                                       12/22/2022 15:38:00 PAGE 9   

 484   8      
 485   8                  gTime4 = 0;
 486   8                  gCtrlPara.Flag = 4;
 487   8                  gCtrlPara.FreeFlag = 5; // ï¿½ï¿½ï¿½ï¿½
 488   8                  break;
 489   8                }
 490   7      
 491   7                // Uï¿½ï¿½ï¿½ï¿½
 492   7                if (HOST_Addr == HMI_U_Coordinate)
 493   7                {
 494   8                  Dat1 = (buf[3] << 8) + buf[4];
 495   8                  Dat2 = (buf[5] << 8) + buf[6];
 496   8      
 497   8                  sys_write_vp(HMI_U_Coordinate, (u8 *)&Dat1, 1);
 498   8                  sys_write_vp(HMI_U_Coordinate + 1, (u8 *)&Dat2, 1);
 499   8      
 500   8                  gTime4 = 0;
 501   8                  gCtrlPara.Flag = 10;
 502   8                  gCtrlPara.FreeFlag = 8; // ï¿½ï¿½ï¿½ï¿½
 503   8                }
 504   7      
 505   7                // ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ï¢
 506   7                if (HOST_Addr == 0x0032)
 507   7                {
 508   8                  Dat1 = (buf[3] << 8) + buf[4];
 509   8                  Dat2 = (buf[5] << 8) + buf[6];
 510   8      
 511   8                  sys_write_vp(HMI_System_InformationShow, (u8 *)&Dat1, 1);
 512   8                  sys_write_vp(HMI_System_InformationShow + 1, (u8 *)&Dat2, 1);
 513   8      
 514   8                  gCtrlPara.IconCount = 1;
 515   8                  break;
 516   8                }
 517   7      
 518   7                // ï¿½Û¼Æ¿ï¿½ï¿½ï¿½Ê±ï¿½ï¿½
 519   7                if (HOST_Addr == 0x0465)
 520   7                {
 521   8                  Dat5 = (buf[3] << 8) + buf[4];
 522   8                  Dat6 = (buf[5] << 8) + buf[6];
 523   8      
 524   8                  gCtrlPara.Times = (Dat5 << 16) | Dat6;
 525   8      
 526   8                  Dat1 = (gCtrlPara.Times >> 16) & 0xFFFF;
 527   8                  Dat2 = (gCtrlPara.Times >> 12) & 0xF;
 528   8                  Dat3 = (gCtrlPara.Times >> 6) & 0x3F;
 529   8                  Dat4 = gCtrlPara.Times & 0x3F;
 530   8      
 531   8                  sys_write_vp(0x400B, (u8 *)&Dat1, 1);
 532   8                  sys_write_vp(0x400C, (u8 *)&Dat2, 1);
 533   8                  sys_write_vp(0x400D, (u8 *)&Dat3, 1);
 534   8                  sys_write_vp(0x400E, (u8 *)&Dat4, 1);
 535   8      
 536   8                  gCtrlPara.IconCount = 2;
 537   8      
 538   8                  break;
 539   8                }
 540   7      
 541   7                // ï¿½Û¼Æ¼Ó¹ï¿½Ê±ï¿½ï¿½
 542   7                if (HOST_Addr == 0x0467)
 543   7                {
 544   8                  Dat5 = (buf[3] << 8) + buf[4];
 545   8                  Dat6 = (buf[5] << 8) + buf[6];
C51 COMPILER V9.60.0.0   RECEIVEDATA                                                       12/22/2022 15:38:00 PAGE 10  

 546   8      
 547   8                  gCtrlPara.Times = (Dat5 << 16) | Dat6;
 548   8      
 549   8                  Dat1 = (gCtrlPara.Times >> 16) & 0xFFFF;
 550   8                  Dat2 = (gCtrlPara.Times >> 12) & 0xF;
 551   8                  Dat3 = (gCtrlPara.Times >> 6) & 0x3F;
 552   8                  Dat4 = gCtrlPara.Times & 0x3F;
 553   8      
 554   8                  sys_write_vp(0x4002, (u8 *)&Dat1, 1);
 555   8                  sys_write_vp(0x4003, (u8 *)&Dat2, 1);
 556   8                  sys_write_vp(0x4004, (u8 *)&Dat3, 1);
 557   8                  sys_write_vp(0x4005, (u8 *)&Dat4, 1);
 558   8      
 559   8                  gCtrlPara.IconCount = 3;
 560   8      
 561   8                  break;
 562   8                }
 563   7      
 564   7                // Ç°ï¿½Î¼Ó¹ï¿½Ê±ï¿½ï¿½
 565   7                if (HOST_Addr == 0x0469)
 566   7                {
 567   8                  Dat5 = (buf[3] << 8) + buf[4];
 568   8                  Dat6 = (buf[5] << 8) + buf[6];
 569   8      
 570   8                  gCtrlPara.Times = (Dat5 << 16) | Dat6;
 571   8      
 572   8                  Dat1 = (gCtrlPara.Times >> 16) & 0xFFFF;
 573   8                  Dat2 = (gCtrlPara.Times >> 12) & 0xF;
 574   8                  Dat3 = (gCtrlPara.Times >> 6) & 0x3F;
 575   8                  Dat4 = gCtrlPara.Times & 0x3F;
 576   8      
 577   8                  sys_write_vp(0x400F, (u8 *)&Dat1, 1);
 578   8                  sys_write_vp(0x4010, (u8 *)&Dat2, 1);
 579   8                  sys_write_vp(0x4011, (u8 *)&Dat3, 1);
 580   8                  sys_write_vp(0x4012, (u8 *)&Dat4, 1);
 581   8      
 582   8                  gCtrlPara.IconCount = 4;
 583   8      
 584   8                  break;
 585   8                }
 586   7      
 587   7                // ï¿½Û¼Æ³ï¿½ï¿½ï¿½Ê±ï¿½ï¿½
 588   7                if (HOST_Addr == 0x046B)
 589   7                {
 590   8                  Dat5 = (buf[3] << 8) + buf[4];
 591   8                  Dat6 = (buf[5] << 8) + buf[6];
 592   8      
 593   8                  gCtrlPara.Times = (Dat5 << 16) | Dat6;
 594   8      
 595   8                  Dat1 = (gCtrlPara.Times >> 16) & 0xFFFF;
 596   8                  Dat2 = (gCtrlPara.Times >> 12) & 0xF;
 597   8                  Dat3 = (gCtrlPara.Times >> 6) & 0x3F;
 598   8                  Dat4 = gCtrlPara.Times & 0x3F;
 599   8      
 600   8                  sys_write_vp(0x4013, (u8 *)&Dat1, 1);
 601   8                  sys_write_vp(0x4014, (u8 *)&Dat2, 1);
 602   8                  sys_write_vp(0x4015, (u8 *)&Dat3, 1);
 603   8                  sys_write_vp(0x4016, (u8 *)&Dat4, 1);
 604   8      
 605   8                  gCtrlPara.IconCount = 5;
 606   8      
 607   8                  break;
C51 COMPILER V9.60.0.0   RECEIVEDATA                                                       12/22/2022 15:38:00 PAGE 11  

 608   8                }
 609   7      
 610   7                // ï¿½Û¼Æ¼Ó¹ï¿½ï¿½ï¿½ï¿½ï¿½
 611   7                if (HOST_Addr == 0x046D)
 612   7                {
 613   8                  Dat1 = (buf[3] << 8) + buf[4];
 614   8                  Dat2 = (buf[5] << 8) + buf[6];
 615   8      
 616   8                  sys_write_vp(0x4006, (u8 *)&Dat1, 1);
 617   8                  sys_write_vp(0x4007, (u8 *)&Dat2, 1);
 618   8      
 619   8                  gCtrlPara.IconCount = 6;
 620   8      
 621   8                  break;
 622   8                }
 623   7      
 624   7                // Xï¿½ï¿½ï¿½Û¼ï¿½ï¿½Ð³ï¿½
 625   7                if (HOST_Addr == 0x046F)
 626   7                {
 627   8                  Dat1 = (buf[3] << 8) + buf[4];
 628   8                  Dat2 = (buf[5] << 8) + buf[6];
 629   8      
 630   8                  sys_write_vp(0x4017, (u8 *)&Dat1, 1);
 631   8                  sys_write_vp(0x4018, (u8 *)&Dat2, 1);
 632   8      
 633   8                  gCtrlPara.IconCount = 7;
 634   8      
 635   8                  break;
 636   8                }
 637   7      
 638   7                // Yï¿½ï¿½ï¿½Û¼ï¿½ï¿½Ð³ï¿½
 639   7                if (HOST_Addr == 0x0471)
 640   7                {
 641   8                  Dat1 = (buf[3] << 8) + buf[4];
 642   8                  Dat2 = (buf[5] << 8) + buf[6];
 643   8      
 644   8                  sys_write_vp(0x4019, (u8 *)&Dat1, 1);
 645   8                  sys_write_vp(0x401A, (u8 *)&Dat2, 1);
 646   8      
 647   8                  gCtrlPara.IconCount = 8;
 648   8      
 649   8                  break;
 650   8                }
 651   7              }
 652   6              for (i = 0; i < 12; i++)
 653   6              {
 654   7                buf[i] = 0;
 655   7              }
 656   6            }
 657   5            break;
 658   5      
 659   5            case 0x08:
 660   5            {
 661   6              if ((u16)(RxWritePt - RxReadPt) < 10) //
 662   6              {
 663   7                UART4_Sendbyte16(0xDD08);
 664   7                RxReadPt -= 2;
 665   7                break;
 666   7              }
 667   6              buf[0] = 0x01;
 668   6              buf[1] = RxCommon;
 669   6              buf[2] = Length;              // ï¿½ï¿½ï¿½ï¿½ï¿½Ö½ï¿½ï¿½ï¿½
C51 COMPILER V9.60.0.0   RECEIVEDATA                                                       12/22/2022 15:38:00 PAGE 12  

 670   6              buf[3] = RxBuf[(iRxReadPt++) & RxBufMask];  // ï¿½ï¿½ï¿½ï¿½1
 671   6              buf[4] = RxBuf[(iRxReadPt++) & RxBufMask];  // ï¿½ï¿½ï¿½ï¿½2
 672   6              buf[5] = RxBuf[(iRxReadPt++) & RxBufMask];  // ï¿½ï¿½ï¿½ï¿½3
 673   6              buf[6] = RxBuf[(iRxReadPt++) & RxBufMask];  // ï¿½ï¿½ï¿½ï¿½4
 674   6              buf[7] = RxBuf[(iRxReadPt++) & RxBufMask];  // ï¿½ï¿½ï¿½ï¿½5
 675   6              buf[8] = RxBuf[(iRxReadPt++) & RxBufMask];  // ï¿½ï¿½ï¿½ï¿½6
 676   6              buf[9] = RxBuf[(iRxReadPt++) & RxBufMask];  // ï¿½ï¿½ï¿½ï¿½7
 677   6              buf[10] = RxBuf[(iRxReadPt++) & RxBufMask]; // ï¿½ï¿½ï¿½ï¿½8
 678   6      
 679   6              Check_Nodbus = (RxBuf[(iRxReadPt++) & RxBufMask] << 8) + RxBuf[(iRxReadPt++) & RxBufMask]; // ï¿½ï¿½ï¿
             -½ï¿½Ð£ï¿½ï¿½Î»
 680   6              CheckNumber = crc16(buf, RxWritePt - RxReadPt);
 681   6      
 682   6              if (Check_Nodbus == CheckNumber)
 683   6              {
 684   7      
 685   7                // ï¿½ï¿½Ç°ï¿½Ä¼ï¿½ï¿½ï¿½0x0010-0x0013
 686   7                if (HOST_Addr == HMI_Current_File_Name)
 687   7                {
 688   8                  Dat1 = (buf[3] << 8) + buf[4];
 689   8                  Dat2 = (buf[5] << 8) + buf[6];
 690   8                  Dat3 = (buf[7] << 8) + buf[8];
 691   8                  Dat4 = (buf[9] << 8) + buf[10];
 692   8      
 693   8                  sys_write_vp(HMI_Current_File_Name, (u8 *)&Dat1, 1);
 694   8                  sys_write_vp(HMI_Current_File_Name + 1, (u8 *)&Dat2, 1);
 695   8                  sys_write_vp(HMI_Current_File_Name + 2, (u8 *)&Dat3, 1);
 696   8                  sys_write_vp(HMI_Current_File_Name + 3, (u8 *)&Dat4, 1);
 697   8      
 698   8                  gTime4 = 0;
 699   8                  gCtrlPara.FreeFlag = 6; // ï¿½ï¿½ï¿½ï¿½
 700   8      
 701   8                  break;
 702   8                }
 703   7      
 704   7                // ï¿½ï¿½IP
 705   7                if (HOST_Addr == HMI_Read_WIFI_IP)
 706   7                {
 707   8                  Dat1 = (buf[3] << 8) + buf[4];
 708   8                  Dat2 = (buf[5] << 8) + buf[6];
 709   8                  Dat3 = (buf[7] << 8) + buf[8];
 710   8                  Dat4 = (buf[9] << 8) + buf[10];
 711   8      
 712   8                  sys_write_vp(HMI_WIFI_IP1_Addr, (u8 *)&Dat1, 1);
 713   8                  sys_write_vp(HMI_WIFI_IP2_Addr, (u8 *)&Dat2, 1);
 714   8                  sys_write_vp(HMI_WIFI_IP3_Addr, (u8 *)&Dat3, 1);
 715   8                  sys_write_vp(HMI_WIFI_IP4_Addr, (u8 *)&Dat4, 1);
 716   8      
 717   8                  break;
 718   8                }
 719   7      
 720   7                // Ò»ï¿½ï¿½ï¿½Ä¼ï¿½  0x302b-0x302e
 721   7                if (HOST_Addr == HMI_NowFile1)
 722   7                {
 723   8                  Dat1 = (buf[3] << 8) + buf[4];
 724   8                  Dat2 = (buf[5] << 8) + buf[6];
 725   8                  Dat3 = (buf[7] << 8) + buf[8];
 726   8                  Dat4 = (buf[9] << 8) + buf[10];
 727   8      
 728   8                  sys_write_vp(HMI_NowFile1, (u8 *)&Dat1, 1);
 729   8                  sys_write_vp(HMI_NowFile1 + 1, (u8 *)&Dat2, 1);
 730   8                  sys_write_vp(HMI_NowFile1 + 2, (u8 *)&Dat3, 1);
C51 COMPILER V9.60.0.0   RECEIVEDATA                                                       12/22/2022 15:38:00 PAGE 13  

 731   8                  sys_write_vp(HMI_NowFile1 + 3, (u8 *)&Dat4, 1);
 732   8      
 733   8                  gCtrlPara.FileCount = 2; // ï¿½Ä¼ï¿½ï¿½ï¿½È¡ï¿½ï¿½ï¿½ï¿½Öµ
 734   8                  gTime9 = 0;
 735   8      
 736   8                  break;
 737   8                }
 738   7      
 739   7                // ï¿½ï¿½ï¿½ï¿½ï¿½Ä¼ï¿½ 0x302f-0x3032
 740   7                if (HOST_Addr == HMI_NowFile2)
 741   7                {
 742   8                  Dat1 = (buf[3] << 8) + buf[4];
 743   8                  Dat2 = (buf[5] << 8) + buf[6];
 744   8                  Dat3 = (buf[7] << 8) + buf[8];
 745   8                  Dat4 = (buf[9] << 8) + buf[10];
 746   8      
 747   8                  sys_write_vp(HMI_NowFile2, (u8 *)&Dat1, 1);
 748   8                  sys_write_vp(HMI_NowFile2 + 1, (u8 *)&Dat2, 1);
 749   8                  sys_write_vp(HMI_NowFile2 + 2, (u8 *)&Dat3, 1);
 750   8                  sys_write_vp(HMI_NowFile2 + 3, (u8 *)&Dat4, 1);
 751   8      
 752   8                  gCtrlPara.FileCount = 3; // ï¿½Ä¼ï¿½ï¿½ï¿½È¡ï¿½ï¿½ï¿½ï¿½Öµ
 753   8                  gTime9 = 0;
 754   8      
 755   8                  break;
 756   8                }
 757   7      
 758   7                // ï¿½ï¿½ï¿½ï¿½ï¿½Ä¼ï¿½  0x3033-0x3036
 759   7                if (HOST_Addr == HMI_NowFile3)
 760   7                {
 761   8                  Dat1 = (buf[3] << 8) + buf[4];
 762   8                  Dat2 = (buf[5] << 8) + buf[6];
 763   8                  Dat3 = (buf[7] << 8) + buf[8];
 764   8                  Dat4 = (buf[9] << 8) + buf[10];
 765   8      
 766   8                  sys_write_vp(HMI_NowFile3, (u8 *)&Dat1, 1);
 767   8                  sys_write_vp(HMI_NowFile3 + 1, (u8 *)&Dat2, 1);
 768   8                  sys_write_vp(HMI_NowFile3 + 2, (u8 *)&Dat3, 1);
 769   8                  sys_write_vp(HMI_NowFile3 + 3, (u8 *)&Dat4, 1);
 770   8      
 771   8                  gCtrlPara.FileCount = 4; // ï¿½Ä¼ï¿½ï¿½ï¿½È¡ï¿½ï¿½ï¿½ï¿½Öµ
 772   8                  gTime9 = 0;
 773   8      
 774   8                  break;
 775   8                }
 776   7      
 777   7                // ï¿½Äºï¿½ï¿½Ä¼ï¿½ 0x3037-0x303A
 778   7                if (HOST_Addr == HMI_NowFile4)
 779   7                {
 780   8                  Dat1 = (buf[3] << 8) + buf[4];
 781   8                  Dat2 = (buf[5] << 8) + buf[6];
 782   8                  Dat3 = (buf[7] << 8) + buf[8];
 783   8                  Dat4 = (buf[9] << 8) + buf[10];
 784   8      
 785   8                  sys_write_vp(HMI_NowFile4, (u8 *)&Dat1, 1);
 786   8                  sys_write_vp(HMI_NowFile4 + 1, (u8 *)&Dat2, 1);
 787   8                  sys_write_vp(HMI_NowFile4 + 2, (u8 *)&Dat3, 1);
 788   8                  sys_write_vp(HMI_NowFile4 + 3, (u8 *)&Dat4, 1);
 789   8      
 790   8                  gCtrlPara.FileCount = 5; // ï¿½Ä¼ï¿½ï¿½ï¿½È¡ï¿½ï¿½ï¿½ï¿½Öµ
 791   8                  gTime9 = 0;
 792   8      
C51 COMPILER V9.60.0.0   RECEIVEDATA                                                       12/22/2022 15:38:00 PAGE 14  

 793   8                  break;
 794   8                }
 795   7      
 796   7                // ï¿½ï¿½ï¿½ï¿½Ä¼ï¿½  0x303B-0x303E
 797   7                if (HOST_Addr == HMI_NowFile5)
 798   7                {
 799   8                  Dat1 = (buf[3] << 8) + buf[4];
 800   8                  Dat2 = (buf[5] << 8) + buf[6];
 801   8                  Dat3 = (buf[7] << 8) + buf[8];
 802   8                  Dat4 = (buf[9] << 8) + buf[10];
 803   8      
 804   8                  sys_write_vp(HMI_NowFile5, (u8 *)&Dat1, 1);
 805   8                  sys_write_vp(HMI_NowFile5 + 1, (u8 *)&Dat2, 1);
 806   8                  sys_write_vp(HMI_NowFile5 + 2, (u8 *)&Dat3, 1);
 807   8                  sys_write_vp(HMI_NowFile5 + 3, (u8 *)&Dat4, 1);
 808   8      
 809   8                  gCtrlPara.FileCount = 6; // ï¿½Ä¼ï¿½ï¿½ï¿½È¡ï¿½ï¿½ï¿½ï¿½Öµ
 810   8                  gTime9 = 0;
 811   8      
 812   8                  break;
 813   8                }
 814   7      
 815   7                // ï¿½ï¿½ï¿½ï¿½ï¿½Ä¼ï¿½  0x303F-0x3042
 816   7                if (HOST_Addr == HMI_NowFile6)
 817   7                {
 818   8                  Dat1 = (buf[3] << 8) + buf[4];
 819   8                  Dat2 = (buf[5] << 8) + buf[6];
 820   8                  Dat3 = (buf[7] << 8) + buf[8];
 821   8                  Dat4 = (buf[9] << 8) + buf[10];
 822   8      
 823   8                  sys_write_vp(HMI_NowFile6, (u8 *)&Dat1, 1);
 824   8                  sys_write_vp(HMI_NowFile6 + 1, (u8 *)&Dat2, 1);
 825   8                  sys_write_vp(HMI_NowFile6 + 2, (u8 *)&Dat3, 1);
 826   8                  sys_write_vp(HMI_NowFile6 + 3, (u8 *)&Dat4, 1);
 827   8      
 828   8                  gCtrlPara.FileCount = 7; // ï¿½Ä¼ï¿½ï¿½ï¿½È¡ï¿½ï¿½ï¿½ï¿½Öµ
 829   8                  gTime9 = 0;
 830   8      
 831   8                  break;
 832   8                }
 833   7      
 834   7                // ï¿½ßºï¿½ï¿½Ä¼ï¿½  0x3043-0x3046
 835   7                if (HOST_Addr == HMI_NowFile7)
 836   7                {
 837   8                  Dat1 = (buf[3] << 8) + buf[4];
 838   8                  Dat2 = (buf[5] << 8) + buf[6];
 839   8                  Dat3 = (buf[7] << 8) + buf[8];
 840   8                  Dat4 = (buf[9] << 8) + buf[10];
 841   8      
 842   8                  sys_write_vp(HMI_NowFile7, (u8 *)&Dat1, 1);
 843   8                  sys_write_vp(HMI_NowFile7 + 1, (u8 *)&Dat2, 1);
 844   8                  sys_write_vp(HMI_NowFile7 + 2, (u8 *)&Dat3, 1);
 845   8                  sys_write_vp(HMI_NowFile7 + 3, (u8 *)&Dat4, 1);
 846   8      
 847   8                  gCtrlPara.FileCount = 8; // ï¿½Ä¼ï¿½ï¿½ï¿½È¡ï¿½ï¿½ï¿½ï¿½Öµ
 848   8                  gTime9 = 0;
 849   8      
 850   8                  break;
 851   8                }
 852   7      
 853   7                // ï¿½Ëºï¿½ï¿½Ä¼ï¿½  0x3047-0x304A
 854   7                if (HOST_Addr == HMI_NowFile8)
C51 COMPILER V9.60.0.0   RECEIVEDATA                                                       12/22/2022 15:38:00 PAGE 15  

 855   7                {
 856   8                  Dat1 = (buf[3] << 8) + buf[4];
 857   8                  Dat2 = (buf[5] << 8) + buf[6];
 858   8                  Dat3 = (buf[7] << 8) + buf[8];
 859   8                  Dat4 = (buf[9] << 8) + buf[10];
 860   8      
 861   8                  sys_write_vp(HMI_NowFile8, (u8 *)&Dat1, 1);
 862   8                  sys_write_vp(HMI_NowFile8 + 1, (u8 *)&Dat2, 1);
 863   8                  sys_write_vp(HMI_NowFile8 + 2, (u8 *)&Dat3, 1);
 864   8                  sys_write_vp(HMI_NowFile8 + 3, (u8 *)&Dat4, 1);
 865   8      
 866   8                  gCtrlPara.FileCount = 9; // ï¿½Ä¼ï¿½ï¿½ï¿½È¡ï¿½ï¿½ï¿½ï¿½Öµ
 867   8                  gTime9 = 0;
 868   8      
 869   8                  break;
 870   8                }
 871   7      
 872   7                // ï¿½Åºï¿½ï¿½Ä¼ï¿½  0x304B-0x304E
 873   7                if (HOST_Addr == HMI_NowFile9)
 874   7                {
 875   8                  Dat1 = (buf[3] << 8) + buf[4];
 876   8                  Dat2 = (buf[5] << 8) + buf[6];
 877   8                  Dat3 = (buf[7] << 8) + buf[8];
 878   8                  Dat4 = (buf[9] << 8) + buf[10];
 879   8      
 880   8                  sys_write_vp(HMI_NowFile9, (u8 *)&Dat1, 1);
 881   8                  sys_write_vp(HMI_NowFile9 + 1, (u8 *)&Dat2, 1);
 882   8                  sys_write_vp(HMI_NowFile9 + 2, (u8 *)&Dat3, 1);
 883   8                  sys_write_vp(HMI_NowFile9 + 3, (u8 *)&Dat4, 1);
 884   8      
 885   8                  gCtrlPara.FileCount = 10; // ï¿½Ä¼ï¿½ï¿½ï¿½È¡ï¿½ï¿½ï¿½ï¿½Öµ
 886   8                  gTime9 = 0;
 887   8      
 888   8                  break;
 889   8                }
 890   7              }
 891   6              for (i = 0; i < 12; i++)
 892   6              {
 893   7                buf[i] = 0;
 894   7              }
 895   6            }
 896   5            break;
 897   5            }
 898   4          }
 899   3          break;
 900   3      
 901   3          case 0x05:
 902   3          {
 903   4      
 904   4            Addr = (RxBuf[(iRxReadPt++) & RxBufMask] << 8) + RxBuf[(iRxReadPt++) & RxBufMask]; // ï¿½ï¿½Ö·
 905   4            switch (Addr)
 906   4            {
 907   5            // ï¿½ï¿½
 908   5            case HOST_On:
 909   5            {
 910   6              if ((u16)(RxWritePt - RxReadPt) < 5) //
 911   6              {
 912   7                RxReadPt -= 2;
 913   7                break;
 914   7              }
 915   6              buf[0] = 0x01;
 916   6              buf[1] = RxCommon;
C51 COMPILER V9.60.0.0   RECEIVEDATA                                                       12/22/2022 15:38:00 PAGE 16  

 917   6              buf[2] = (Addr >> 8) && 0xFF;
 918   6              buf[3] = Addr && 0xFF;
 919   6              buf[4] = RxBuf[(iRxReadPt++) & RxBufMask]; // ï¿½ï¿½ï¿½ï¿½1
 920   6              buf[5] = RxBuf[(iRxReadPt++) & RxBufMask]; // ï¿½ï¿½ï¿½ï¿½2
 921   6      
 922   6              Check_Nodbus = (RxBuf[(iRxReadPt++) & RxBufMask] << 8) + RxBuf[(iRxReadPt++) & RxBufMask]; // ï¿½ï¿½ï¿
             -½ï¿½Ð£ï¿½ï¿½Î»
 923   6              CheckNumber = crc16(buf, RxWritePt - RxReadPt);
 924   6      
 925   6              if (Check_Nodbus == CheckNumber)
 926   6              {
 927   7                //                                    UART4_Sendbyte16(0x0505);
 928   7                //                                    gCtrlPara.TouchFlag = 0;
 929   7              }
 930   6      
 931   6              for (i = 0; i < 12; i++)
 932   6              {
 933   7                buf[i] = 0;
 934   7              }
 935   6            }
 936   5            break;
 937   5            }
 938   4          }
 939   3          break;
 940   3          }
 941   2      
 942   2          RxReadPt = iRxReadPt; // Ö¸ï¿½ï¿½ï¿½ï¿½È·ï¿½ï¿½ï¿½ï¿½ï¿½ó£¬½ï¿½Ö¸ï¿½ï¿½RxReadPtÍ¬ï¿½ï¿½
 943   2        }
 944   1      }
 945          
 946          void ALm_Init(u16 Dat1)
 947          {
 948   1        if (Dat1 & 0x1) // Xï¿½ï¿½Ó²ï¿½ï¿½Î»
 949   1        {
 950   2          if (gCtrlPara.Language == 0)
 951   2          {
 952   3            gCtrlPara.Text1 = 0xD6E1;
 953   3            gCtrlPara.Text2 = 0xCFDE;
 954   3            gCtrlPara.Text3 = 0xCEBB;
 955   3            gCtrlPara.Text4 = 0xB4A5;
 956   3            gCtrlPara.Text5 = 0xB7A2;
 957   3            gCtrlPara.Text6 = 0x0000;
 958   3            gCtrlPara.Text7 = 0x0000;
 959   3          }
 960   2          else
 961   2          {
 962   3            gCtrlPara.Text1 = 0X5820;
 963   3            gCtrlPara.Text2 = 0x4C69;
 964   3            gCtrlPara.Text3 = 0x6d69;
 965   3            gCtrlPara.Text4 = 0x7420;
 966   3            gCtrlPara.Text5 = 0x7472;
 967   3            gCtrlPara.Text6 = 0x6967;
 968   3            gCtrlPara.Text7 = 0x0000;
 969   3          }
 970   2        }
 971   1        else if (Dat1 & 0x2) // Yï¿½ï¿½Ó²ï¿½ï¿½Î»
 972   1        {
 973   2          if (gCtrlPara.Language == 0)
 974   2          {
 975   3            gCtrlPara.Text1 = 0x5920;
 976   3            gCtrlPara.Text2 = 0xCFDE;
 977   3            gCtrlPara.Text3 = 0xCEBB;
C51 COMPILER V9.60.0.0   RECEIVEDATA                                                       12/22/2022 15:38:00 PAGE 17  

 978   3            gCtrlPara.Text4 = 0xB4A5;
 979   3            gCtrlPara.Text5 = 0xB7A2;
 980   3            gCtrlPara.Text6 = 0x0000;
 981   3            gCtrlPara.Text7 = 0x0000;
 982   3          }
 983   2          else
 984   2          {
 985   3      
 986   3            gCtrlPara.Text1 = 0X5920;
 987   3            gCtrlPara.Text2 = 0x4C69;
 988   3            gCtrlPara.Text3 = 0x6d69;
 989   3            gCtrlPara.Text4 = 0x7420;
 990   3            gCtrlPara.Text5 = 0x7472;
 991   3            gCtrlPara.Text6 = 0x6967;
 992   3            gCtrlPara.Text7 = 0x0000;
 993   3          }
 994   2        }
 995   1        else if (Dat1 & 0x4) // Zï¿½ï¿½Ó²ï¿½ï¿½Î»
 996   1        {
 997   2          if (gCtrlPara.Language == 0)
 998   2          {
 999   3            gCtrlPara.Text1 = 0x5A20;
1000   3            gCtrlPara.Text2 = 0xCFDE;
1001   3            gCtrlPara.Text3 = 0xCEBB;
1002   3            gCtrlPara.Text4 = 0xB4A5;
1003   3            gCtrlPara.Text5 = 0xB7A2;
1004   3            gCtrlPara.Text6 = 0x0000;
1005   3            gCtrlPara.Text7 = 0x0000;
1006   3          }
1007   2          else
1008   2          {
1009   3            gCtrlPara.Text1 = 0x5A20;
1010   3            gCtrlPara.Text2 = 0x4C69;
1011   3            gCtrlPara.Text3 = 0x6d69;
1012   3            gCtrlPara.Text4 = 0x7420;
1013   3            gCtrlPara.Text5 = 0x7472;
1014   3            gCtrlPara.Text6 = 0x6967;
1015   3            gCtrlPara.Text7 = 0x0000;
1016   3          }
1017   2        }
1018   1        else if (Dat1 & 0x8) // Uï¿½ï¿½Ó²ï¿½ï¿½Î»
1019   1        {
1020   2          if (gCtrlPara.Language == 0)
1021   2          {
1022   3            gCtrlPara.Text1 = 0x5520;
1023   3            gCtrlPara.Text2 = 0xCFDE;
1024   3            gCtrlPara.Text3 = 0xCEBB;
1025   3            gCtrlPara.Text4 = 0xB4A5;
1026   3            gCtrlPara.Text5 = 0xB7A2;
1027   3            gCtrlPara.Text6 = 0x0000;
1028   3            gCtrlPara.Text7 = 0x0000;
1029   3          }
1030   2          else
1031   2          {
1032   3            gCtrlPara.Text1 = 0x5A20;
1033   3            gCtrlPara.Text2 = 0x4C69;
1034   3            gCtrlPara.Text3 = 0x6d69;
1035   3            gCtrlPara.Text4 = 0x7420;
1036   3            gCtrlPara.Text5 = 0x7472;
1037   3            gCtrlPara.Text6 = 0x6967;
1038   3            gCtrlPara.Text7 = 0x0000;
1039   3          }
C51 COMPILER V9.60.0.0   RECEIVEDATA                                                       12/22/2022 15:38:00 PAGE 18  

1040   2        }
1041   1        else if (Dat1 & 0x100) // Xï¿½ß¿ï¿½Ô½ï¿½ï¿½
1042   1        {
1043   2          if (gCtrlPara.Language == 0)
1044   2          {
1045   3            gCtrlPara.Text1 = 0x5820;
1046   3            gCtrlPara.Text2 = 0xB1DF;
1047   3            gCtrlPara.Text3 = 0xBFF2;
1048   3            gCtrlPara.Text4 = 0xD4BD;
1049   3            gCtrlPara.Text5 = 0xBDE7;
1050   3            gCtrlPara.Text6 = 0x0000;
1051   3            gCtrlPara.Text7 = 0x0000;
1052   3          }
1053   2          else
1054   2          {
1055   3            gCtrlPara.Text1 = 0x5820;
1056   3            gCtrlPara.Text2 = 0x4F76;
1057   3            gCtrlPara.Text3 = 0x6572;
1058   3            gCtrlPara.Text4 = 0x7363;
1059   3            gCtrlPara.Text5 = 0x616C;
1060   3            gCtrlPara.Text6 = 0x6500;
1061   3            gCtrlPara.Text7 = 0x0000;
1062   3          }
1063   2      
1064   2          //      if(gCtrlPara.Language == 0)
1065   2          //      {
1066   2          //        Change_Page(0x43);
1067   2          //        Send_ModBus(0x05,0x0003,0xFF00,0x00); //ï¿½Â·ï¿½ï¿½ï¿½Í£
1068   2          //      }
1069   2          //      else
1070   2          //      {
1071   2          //        Change_Page(0x1B);
1072   2          //        Send_ModBus(0x05,0x0003,0xFF00,0x00); //ï¿½Â·ï¿½ï¿½ï¿½Í£
1073   2          //      }
1074   2        }
1075   1        else if (Dat1 & 0x200) // Yï¿½ß¿ï¿½Ô½ï¿½ï¿½
1076   1        {
1077   2          if (gCtrlPara.Language == 0)
1078   2          {
1079   3            gCtrlPara.Text1 = 0x5920;
1080   3            gCtrlPara.Text2 = 0xB1DF;
1081   3            gCtrlPara.Text3 = 0xBFF2;
1082   3            gCtrlPara.Text4 = 0xD4BD;
1083   3            gCtrlPara.Text5 = 0xBDE7;
1084   3            gCtrlPara.Text6 = 0x0000;
1085   3            gCtrlPara.Text7 = 0x0000;
1086   3          }
1087   2          else
1088   2          {
1089   3            gCtrlPara.Text1 = 0x5920;
1090   3            gCtrlPara.Text2 = 0x4F76;
1091   3            gCtrlPara.Text3 = 0x6572;
1092   3            gCtrlPara.Text4 = 0x7363;
1093   3            gCtrlPara.Text5 = 0x616C;
1094   3            gCtrlPara.Text6 = 0x6500;
1095   3            gCtrlPara.Text7 = 0x0000;
1096   3          }
1097   2      
1098   2          //      if(gCtrlPara.Language == 0)
1099   2          //      {
1100   2          //        Change_Page(0x43);
1101   2          //        Send_ModBus(0x05,0x0003,0xFF00,0x00); //ï¿½Â·ï¿½ï¿½ï¿½Í£
C51 COMPILER V9.60.0.0   RECEIVEDATA                                                       12/22/2022 15:38:00 PAGE 19  

1102   2          //      }
1103   2          //      else
1104   2          //      {
1105   2          //        Change_Page(0x1B);
1106   2          //        Send_ModBus(0x05,0x0003,0xFF00,0x00); //ï¿½Â·ï¿½ï¿½ï¿½Í£
1107   2          //      }
1108   2        }
1109   1        else if (Dat1 & 0x400) // ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
1110   1        {
1111   2          if (gCtrlPara.Language == 0)
1112   2          {
1113   3            gCtrlPara.Text1 = 0xBBFA;
1114   3            gCtrlPara.Text2 = 0xC6F7;
1115   3            gCtrlPara.Text3 = 0xB1BB;
1116   3            gCtrlPara.Text4 = 0xB1A3;
1117   3            gCtrlPara.Text5 = 0xBBA4;
1118   3            gCtrlPara.Text6 = 0x0000;
1119   3            gCtrlPara.Text7 = 0x0000;
1120   3          }
1121   2          else
1122   2          {
1123   3            gCtrlPara.Text1 = 0x5072;
1124   3            gCtrlPara.Text2 = 0x6F74;
1125   3            gCtrlPara.Text3 = 0x6563;
1126   3            gCtrlPara.Text4 = 0x7469;
1127   3            gCtrlPara.Text5 = 0x6F6E;
1128   3            gCtrlPara.Text6 = 0x2100;
1129   3            gCtrlPara.Text7 = 0x0000;
1130   3          }
1131   2      
1132   2          //      if(gCtrlPara.Language == 0)
1133   2          //      {
1134   2          //        Change_Page(0x42);
1135   2          //        Send_ModBus(0x05,0x0003,0xFF00,0x00); //ï¿½Â·ï¿½ï¿½ï¿½Í£
1136   2          //      }
1137   2          //      else
1138   2          //      {
1139   2          //        Change_Page(0x1A);
1140   2          //        Send_ModBus(0x05,0x0003,0xFF00,0x00); //ï¿½Â·ï¿½ï¿½ï¿½Í£
1141   2          //      }
1142   2        }
1143   1        else if (Dat1 & 0x800) // Ë®ï¿½ï¿½ï¿½ï¿½
1144   1        {
1145   2          if (gCtrlPara.Language == 0)
1146   2          {
1147   3            gCtrlPara.Text1 = 0xCBAE;
1148   3            gCtrlPara.Text2 = 0xB1A3;
1149   3            gCtrlPara.Text3 = 0xBBA4;
1150   3            gCtrlPara.Text4 = 0xB4A5;
1151   3            gCtrlPara.Text5 = 0xB7A2;
1152   3            gCtrlPara.Text6 = 0x0000;
1153   3            gCtrlPara.Text7 = 0x0000;
1154   3          }
1155   2          else
1156   2          {
1157   3            gCtrlPara.Text1 = 0x5761;
1158   3            gCtrlPara.Text2 = 0x7465;
1159   3            gCtrlPara.Text3 = 0x7220;
1160   3            gCtrlPara.Text4 = 0x616c;
1161   3            gCtrlPara.Text5 = 0x6172;
1162   3            gCtrlPara.Text6 = 0x6D00;
1163   3            gCtrlPara.Text7 = 0x0000;
C51 COMPILER V9.60.0.0   RECEIVEDATA                                                       12/22/2022 15:38:00 PAGE 20  

1164   3          }
1165   2        }
1166   1        else if (Dat1 & 0x1000) // ï¿½ï¿½ï¿½ï¿½Î´ï¿½ï¿½Î»ï¿½ï¿½ï¿½ï¿½Ö¹ï¿½Ó¹ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä¼ï¿½
1167   1        {
1168   2          if (gCtrlPara.Language == 0)
1169   2          {
1170   3            gCtrlPara.Text1 = 0xBBFA;
1171   3            gCtrlPara.Text2 = 0xC6F7;
1172   3            gCtrlPara.Text3 = 0xCEB4;
1173   3            gCtrlPara.Text4 = 0xB8B4;
1174   3            gCtrlPara.Text5 = 0xCEBB;
1175   3            gCtrlPara.Text6 = 0x0000;
1176   3            gCtrlPara.Text7 = 0x0000;
1177   3          }
1178   2          else
1179   2          {
1180   3            gCtrlPara.Text1 = 0x4E6F;
1181   3            gCtrlPara.Text2 = 0x2048;
1182   3            gCtrlPara.Text3 = 0x6F6D;
1183   3            gCtrlPara.Text4 = 0x696E;
1184   3            gCtrlPara.Text5 = 0x6721;
1185   3            gCtrlPara.Text6 = 0x0000;
1186   3            gCtrlPara.Text7 = 0x0000;
1187   3          }
1188   2        }
1189   1        else if (Dat1 & 0x10) // ï¿½ï¿½ï¿½Â±ï¿½ï¿½ï¿½
1190   1        {
1191   2          if (gCtrlPara.Language == 0)
1192   2          {
1193   3            gCtrlPara.Text1 = 0xB8DF;
1194   3            gCtrlPara.Text2 = 0xCEC2;
1195   3            gCtrlPara.Text3 = 0xB1A8;
1196   3            gCtrlPara.Text4 = 0xBEAF;
1197   3            gCtrlPara.Text5 = 0x0000;
1198   3            gCtrlPara.Text6 = 0x0000;
1199   3            gCtrlPara.Text7 = 0x0000;
1200   3          }
1201   2          else
1202   2          {
1203   3            gCtrlPara.Text1 = 0x4869;
1204   3            gCtrlPara.Text2 = 0x6768;
1205   3            gCtrlPara.Text3 = 0x2074;
1206   3            gCtrlPara.Text4 = 0x656D;
1207   3            gCtrlPara.Text5 = 0x7020;
1208   3            gCtrlPara.Text6 = 0x0000;
1209   3            gCtrlPara.Text7 = 0x0000;
1210   3          }
1211   2        }
1212   1        else if (Dat1 & 0x20) // ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
1213   1        {
1214   2          if (gCtrlPara.Language == 0)
1215   2          {
1216   3            gCtrlPara.Text1 = 0xD1CC;
1217   3            gCtrlPara.Text2 = 0xCEED;
1218   3            gCtrlPara.Text3 = 0xB1A8;
1219   3            gCtrlPara.Text4 = 0xBEAF;
1220   3            gCtrlPara.Text5 = 0x0000;
1221   3            gCtrlPara.Text6 = 0x0000;
1222   3            gCtrlPara.Text7 = 0x0000;
1223   3          }
1224   2          else
1225   2          {
C51 COMPILER V9.60.0.0   RECEIVEDATA                                                       12/22/2022 15:38:00 PAGE 21  

1226   3            gCtrlPara.Text1 = 0x536D;
1227   3            gCtrlPara.Text2 = 0x6F6B;
1228   3            gCtrlPara.Text3 = 0x6520;
1229   3            gCtrlPara.Text4 = 0x616C;
1230   3            gCtrlPara.Text5 = 0x6172;
1231   3            gCtrlPara.Text6 = 0x6D00;
1232   3            gCtrlPara.Text7 = 0x0000;
1233   3          }
1234   2        }
1235   1        else if (Dat1 & 0x40) // ï¿½ï¿½È¨ï¿½ï¿½ï¿½ï¿½
1236   1        {
1237   2          if (gCtrlPara.Language == 0)
1238   2          {
1239   3            gCtrlPara.Text1 = 0xCADA;
1240   3            gCtrlPara.Text2 = 0xC8A8;
1241   3            gCtrlPara.Text3 = 0xB5BD;
1242   3            gCtrlPara.Text4 = 0xC6DA;
1243   3            gCtrlPara.Text5 = 0x0000;
1244   3            gCtrlPara.Text6 = 0x0000;
1245   3            gCtrlPara.Text7 = 0x0000;
1246   3          }
1247   2          else
1248   2          {
1249   3            gCtrlPara.Text1 = 0x4D61;
1250   3            gCtrlPara.Text2 = 0xCADA;
1251   3            gCtrlPara.Text3 = 0x7475;
1252   3            gCtrlPara.Text4 = 0x7269;
1253   3            gCtrlPara.Text5 = 0x7479;
1254   3            gCtrlPara.Text6 = 0x0000;
1255   3            gCtrlPara.Text7 = 0x0000;
1256   3          }
1257   2        }
1258   1        else if (Dat1 & 0x80) // XYï¿½ß¿ï¿½Ô½ï¿½ï¿½
1259   1        {
1260   2          if (gCtrlPara.Language == 0)
1261   2          {
1262   3            gCtrlPara.Text1 = 0x5859;
1263   3            gCtrlPara.Text2 = 0xB1DF;
1264   3            gCtrlPara.Text3 = 0xBFF2;
1265   3            gCtrlPara.Text4 = 0xD4BD;
1266   3            gCtrlPara.Text5 = 0xBDE7;
1267   3            gCtrlPara.Text6 = 0x0000;
1268   3            gCtrlPara.Text7 = 0x0000;
1269   3          }
1270   2          else
1271   2          {
1272   3            gCtrlPara.Text1 = 0x5859;
1273   3            gCtrlPara.Text2 = 0x4F76;
1274   3            gCtrlPara.Text3 = 0x6572;
1275   3            gCtrlPara.Text4 = 0x7363;
1276   3            gCtrlPara.Text5 = 0x616C;
1277   3            gCtrlPara.Text6 = 0x6500;
1278   3            gCtrlPara.Text7 = 0x0000;
1279   3          }
1280   2        }
1281   1        else if (Dat1 & 0x2000) // Xï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ë²»ï¿½ï¿½
1282   1        {
1283   2          if (gCtrlPara.Language == 0)
1284   2          {
1285   3            gCtrlPara.Text1 = 0x5820;
1286   3            gCtrlPara.Text2 = 0xBBBA;
1287   3            gCtrlPara.Text3 = 0xB3E5;
C51 COMPILER V9.60.0.0   RECEIVEDATA                                                       12/22/2022 15:38:00 PAGE 22  

1288   3            gCtrlPara.Text4 = 0xBEE0;
1289   3            gCtrlPara.Text5 = 0xC0EB;
1290   3            gCtrlPara.Text6 = 0xB2BB;
1291   3            gCtrlPara.Text7 = 0xD7E3;
1292   3          }
1293   2          else
1294   2          {
1295   3            gCtrlPara.Text1 = 0x5820;
1296   3            gCtrlPara.Text2 = 0x6E6F;
1297   3            gCtrlPara.Text3 = 0x7420;
1298   3            gCtrlPara.Text4 = 0x6275;
1299   3            gCtrlPara.Text5 = 0x6666;
1300   3            gCtrlPara.Text6 = 0x6572;
1301   3            gCtrlPara.Text7 = 0x0000;
1302   3          }
1303   2        }
1304   1        else if (Dat1 & 0x4000) // Yï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ë²»ï¿½ï¿½
1305   1        {
1306   2          if (gCtrlPara.Language == 0)
1307   2          {
1308   3            gCtrlPara.Text1 = 0x5920;
1309   3            gCtrlPara.Text2 = 0xBBBA;
1310   3            gCtrlPara.Text3 = 0xB3E5;
1311   3            gCtrlPara.Text4 = 0xBEE0;
1312   3            gCtrlPara.Text5 = 0xC0EB;
1313   3            gCtrlPara.Text6 = 0xB2BB;
1314   3            gCtrlPara.Text7 = 0xD7E3;
1315   3          }
1316   2          else
1317   2          {
1318   3            gCtrlPara.Text1 = 0x5920;
1319   3            gCtrlPara.Text2 = 0x6E6F;
1320   3            gCtrlPara.Text3 = 0x7420;
1321   3            gCtrlPara.Text4 = 0x6275;
1322   3            gCtrlPara.Text5 = 0x6666;
1323   3            gCtrlPara.Text6 = 0x6572;
1324   3            gCtrlPara.Text7 = 0x0000;
1325   3          }
1326   2        }
1327   1        else if (Dat1 & 0x8000) // XYï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ë²»ï¿½ï¿½
1328   1        {
1329   2          if (gCtrlPara.Language == 0)
1330   2          {
1331   3            gCtrlPara.Text1 = 0x5859;
1332   3            gCtrlPara.Text2 = 0xBBBA;
1333   3            gCtrlPara.Text3 = 0xB3E5;
1334   3            gCtrlPara.Text4 = 0xBEE0;
1335   3            gCtrlPara.Text5 = 0xC0EB;
1336   3            gCtrlPara.Text6 = 0xB2BB;
1337   3            gCtrlPara.Text7 = 0xD7E3;
1338   3          }
1339   2          else
1340   2          {
1341   3            gCtrlPara.Text1 = 0x5859;
1342   3            gCtrlPara.Text2 = 0x206E;
1343   3            gCtrlPara.Text3 = 0x6F74;
1344   3            gCtrlPara.Text4 = 0x2062;
1345   3            gCtrlPara.Text5 = 0x7566;
1346   3            gCtrlPara.Text6 = 0x6665;
1347   3            gCtrlPara.Text7 = 0x7200;
1348   3          }
1349   2        }
C51 COMPILER V9.60.0.0   RECEIVEDATA                                                       12/22/2022 15:38:00 PAGE 23  

1350   1      
1351   1        sys_write_vp(HMI_Warning_Text, (u8 *)&gCtrlPara.Text1, 1);
1352   1        sys_write_vp(HMI_Warning_Text + 1, (u8 *)&gCtrlPara.Text2, 1);
1353   1        sys_write_vp(HMI_Warning_Text + 2, (u8 *)&gCtrlPara.Text3, 1);
1354   1        sys_write_vp(HMI_Warning_Text + 3, (u8 *)&gCtrlPara.Text4, 1);
1355   1        sys_write_vp(HMI_Warning_Text + 4, (u8 *)&gCtrlPara.Text5, 1);
1356   1        sys_write_vp(HMI_Warning_Text + 5, (u8 *)&gCtrlPara.Text6, 1);
1357   1        sys_write_vp(HMI_Warning_Text + 6, (u8 *)&gCtrlPara.Text7, 1);
1358   1      
1359   1        Page_Change(0x18);
1360   1        Send_ModBus(0x05, 0x0003, 0xFF00, 0x00); // ï¿½Â·ï¿½ï¿½ï¿½Í£
1361   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =  10026    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      34
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
