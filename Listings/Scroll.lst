C51 COMPILER V9.57.0.0   SCROLL                                                            04/28/2020 19:32:48 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE SCROLL
OBJECT MODULE PLACED IN .\Objects\Scroll.obj
COMPILER INVOKED BY: D:\Program Files\keil\C51\BIN\C51.EXE source\Scroll.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEX
                    -TEND PRINT(.\Listings\Scroll.lst) TABS(2) OBJECT(.\Objects\Scroll.obj)

line level    source

   1          
   2          #include "sys.h"
   3          #include "scroll.h"
   4          
   5          SCROLLSP sp[MAXUNITS];  //
   6          short int   xd;                //偏移
   7          
   8          
   9          //设置坐标
  10          void SetSPCoor(u16 SPADDR,POS *pos)
  11          {
  12   1         write_dgus_vp(SPADDR+1,(char*)(&(pos->x)),1);
  13   1         write_dgus_vp(SPADDR+2,(char*)(&(pos->y)),1);
  14   1      }
  15          
  16          void SetSPPic(u16 SPADDR,u16 picindex)
  17          {
  18   1         
  19   1      }
*** WARNING C280 IN LINE 16 OF source\Scroll.c: 'SPADDR': unreferenced local variable
*** WARNING C280 IN LINE 16 OF source\Scroll.c: 'picindex': unreferenced local variable
  20          //获得某个位置的控件序号
  21          u8 GetIndex(u8 posindex)
  22          {
  23   1          u8 i;
  24   1          for(i=0;i<MAXUNITS;i++)
  25   1          {
  26   2             if(sp[i].indexpos==posindex) break;
  27   2          }
  28   1          return i;
  29   1      }
  30          
  31          
  32          
  33          //+
  34          void ScrollStep( u8  dir)
  35          {
  36   1         u8  i;
  37   1         POS pos;  
  38   1         u8  index;
  39   1         u16 picID;
  40   1         if(dir)
  41   1         {
  42   2            xd++;
  43   2         }
  44   1         else
  45   1         {
  46   2            xd--;
  47   2         }
  48   1      
  49   1      
  50   1         if(xd>0)    //正偏移
  51   1         {
  52   2              if(xd==1) 
C51 COMPILER V9.57.0.0   SCROLL                                                            04/28/2020 19:32:48 PAGE 2   

  53   2              {
  54   3                  if(dir)                        // 下滑
  55   3                  {
  56   4                      index=GetIndex(1);        //获得位置1的控件序号
  57   4                      picID=sp[index].picID;    //获得该控件的图片ID号
  58   4                      if(picID!=0)  
  59   4                          picID--;
  60   4                      else
  61   4                          picID=MAXID-1;          
  62   4                      index=GetIndex(0);       //获得位置0的控件序号
  63   4                      sp[index].picID=picID;   //指定其图片ID号         
  64   4                      SetSPPic(sp[index].spaddr,picID*DIVISOR);   //设置冒出来的图片
  65   4                  }
  66   3              }
  67   2                       
  68   2              if((xd%DIVISORSPACE)==0)      //滚动到等分位置
  69   2              {         
  70   3                   if((xd/DIVISORSPACE)==DIVISOR)//滚动到了正位
  71   3                   {    
  72   4                       xd=0;                                                                        
  73   4                       for(i=0;i<MAXUNITS;i++)
  74   4                       {  
  75   5                          sp[i].indexpos++;      //更新控件位置   
  76   5                          if(sp[i].indexpos==MAXUNITS)      
  77   5                            sp[i].indexpos=0;                //滚出了视窗
  78   5                          if(sp[i].indexpos==MAXUNITS/2)    //更新显示状态                  
  79   5                            sp[i].status= DIVISOR;        //中间位置，设置最显目的
  80   5                          else
  81   5                             sp[i].status=0;                                      
  82   5                       }                               
  83   4                   }
  84   3                   
  85   3                    
  86   3                   
  87   3                   index=GetIndex(MAXUNITS/2-1);          //即将进入的控件
  88   3                   sp[index].status=xd/DIVISORSPACE;      //更新状态
  89   3                   SetSPPic(sp[index].spaddr,picID*DIVISOR*2+sp[index].status);   //设置图片         
  90   3                   index=GetIndex(MAXUNITS/2);            //中间即将退出
  91   3                   sp[index].status=xd/DIVISORSPACE+DIVISOR;    //设置状态  
  92   3                   SetSPPic(sp[index].spaddr,picID*DIVISOR*2+sp[index].status);   //设置图片         
  93   3              }
  94   2              
  95   2              
  96   2            for(i=0;i<MAXUNITS;i++)                         //更新坐标
  97   2            {
  98   3               pos.y=STARTY+sp[i].indexpos*YSPACE+xd;
  99   3               pos.x=STARTX;
 100   3               SetSPCoor(sp[i].spaddr,&pos);
 101   3            }                             
 102   2          }
 103   1            
 104   1          
 105   1          if(xd<0)                                         //负偏移
 106   1          {
 107   2              xd=-xd;                                  
 108   2              if(xd==1)                                   //上滑
 109   2              {
 110   3                  if(!dir)                            
 111   3                  {
 112   4                      index=GetIndex(MAXUNITS-1);        //获得位置最大的控件序号
 113   4                
 114   4                      picID=sp[index].picID;             //获得该控件的图片ID号
C51 COMPILER V9.57.0.0   SCROLL                                                            04/28/2020 19:32:48 PAGE 3   

 115   4                
 116   4                      picID++;
 117   4                      if(picID==MAXID)
 118   4                      {
 119   5                          picID=0;  
 120   5                      }                 
 121   4                
 122   4                      index=GetIndex(0);                 //获得位置0的控件序号
 123   4                
 124   4                      sp[index].picID=picID;             //指定其图片ID号       
 125   4                
 126   4                      SetSPPic(sp[index].spaddr,picID*DIVISOR*2);   //设置冒出来的图片
 127   4                  }
 128   3                
 129   3              }
 130   2                       
 131   2              if((xd%DIVISORSPACE)==0)      //滚动到等分位置
 132   2              {         
 133   3                   if((xd/DIVISORSPACE)==DIVISOR)//滚动到了正位
 134   3                   {    
 135   4                       xd=0;               
 136   4                                                                
 137   4                       for(i=0;i<MAXUNITS;i++)
 138   4                       {  
 139   5                             if(sp[i].indexpos!=0)
 140   5                             
 141   5                                  sp[i].indexpos--;//更新控件位置 
 142   5                             else
 143   5                                  sp[i].indexpos=MAXUNITS-1;                                                                                        
 144   5                          if(sp[i].indexpos==MAXUNITS/2)    //更新显示状态                  
 145   5                            sp[i].status= DIVISOR;          //中间位置，设置最显目的
 146   5                          else
 147   5                             sp[i].status=0;                                      
 148   5                       }                               
 149   4                   }
 150   3                   
 151   3                   index=GetIndex(MAXUNITS/2);            //中间即将退出      
 152   3                   sp[index].status=xd/DIVISORSPACE+DIVISOR;
 153   3                   SetSPPic(sp[index].spaddr,sp[index].picID*DIVISOR*2+sp[index].status);   //设置图片              
 154   3                   index=GetIndex(MAXUNITS/2+1);         //下面即将进入
 155   3                   sp[index].status=xd/DIVISORSPACE;      
 156   3                    SetSPPic(sp[index].spaddr,sp[index].picID*DIVISOR*2+sp[index].status);    //设置图片                 
 157   3              }
 158   2              
 159   2              
 160   2              for(i=0;i<MAXUNITS;i++)                  //更新坐标      
 161   2              {
 162   3                 pos.y=STARTY+sp[i].indexpos*YSPACE-xd;
 163   3                 pos.x=STARTX;
 164   3                 SetSPCoor(sp[i].spaddr,&pos);
 165   3              }
 166   2            
 167   2          }
 168   1           
 169   1      }
 170          
 171          void StopScroll()
 172          {
 173   1           u8 i;
 174   1           POS pos;
 175   1        
 176   1           if(xd>=0.5*YSPACE) 
C51 COMPILER V9.57.0.0   SCROLL                                                            04/28/2020 19:32:48 PAGE 4   

 177   1           {
 178   2                for(i=0;i<MAXUNITS;i++)
 179   2                { 
 180   3                    sp[i].indexpos++;//更新控件位置 
 181   3                    if(sp[i].indexpos== MAXUNITS)
 182   3                    {
 183   4                        sp[i].indexpos=0;
 184   4                    }                                                         
 185   3               }                  
 186   2           }       
 187   1             
 188   1           if(xd<=-0.5*YSPACE)
 189   1           {
 190   2               for(i=0;i<MAXUNITS;i++)
 191   2               {  
 192   3                     if(sp[i].indexpos!=0)
 193   3                       sp[i].indexpos--;//更新控件位置  
 194   3                     else
 195   3                       sp[i].indexpos= MAXUNITS-1;                                      
 196   3               }   
 197   2           }
 198   1           xd=0;
 199   1           for(i=0;i<MAXUNITS;i++)
 200   1           {
 201   2               if(sp[i].indexpos==MAXUNITS/2)
 202   2               {
 203   3                   if((sp[i].status)!=DIVISOR)
 204   3                   {
 205   4                      SetSPPic(sp[i].spaddr,sp[i].picID*DIVISOR*2+DIVISOR);
 206   4                   }
 207   3               }
 208   2               else
 209   2               {
 210   3                  if(sp[i].status!=0)
 211   3                  {
 212   4                     SetSPPic(sp[i].spaddr,sp[i].picID*DIVISOR*2);
 213   4                  }
 214   3                  sp[i].status=0;
 215   3               }         
 216   2           }
 217   1           
 218   1          
 219   1              for(i=0;i<MAXUNITS;i++)                  //更新坐标      
 220   1              {
 221   2                 pos.y=STARTY+sp[i].indexpos*YSPACE;
 222   2                 pos.x=STARTX;
 223   2                 SetSPCoor(sp[i].spaddr,&pos);
 224   2              } 
 225   1           
 226   1           
 227   1      }
 228          
 229          
 230          
 231          
 232          
 233          
 234          
 235          


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.57.0.0   SCROLL                                                            04/28/2020 19:32:48 PAGE 5   

   CODE SIZE        =   1999    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     44      23
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
